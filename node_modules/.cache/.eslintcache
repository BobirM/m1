[{"C:\\proektlar\\crud\\furniture_frontend\\src\\index.js":"1","C:\\proektlar\\crud\\furniture_frontend\\src\\App.js":"2","C:\\proektlar\\crud\\furniture_frontend\\src\\store\\store.js":"3","C:\\proektlar\\crud\\furniture_frontend\\src\\component\\HeaderComponent.js":"4","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\LoginPage.js":"5","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\ProductType.js":"6","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\Product.js":"7","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\Dashboard.js":"8","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\Catalog.js":"9","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\Client.js":"10","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\Supplier.js":"11","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\Measurement.js":"12","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\ProductWareHouse.js":"13","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\Material.js":"14","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\WareHouseMaterial.js":"15","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\InputMaterial.js":"16","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\OutputMaterial.js":"17","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\OutputProduct.js":"18","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\InputProduct.js":"19","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\SuplierInformation.js":"20","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\ClientInformation.js":"21","C:\\proektlar\\crud\\furniture_frontend\\src\\page to section\\ToSuplier.js":"22","C:\\proektlar\\crud\\furniture_frontend\\src\\page to section\\ToProductPage.js":"23","C:\\proektlar\\crud\\furniture_frontend\\src\\page to section\\ToMaterial.js":"24","C:\\proektlar\\crud\\furniture_frontend\\src\\store\\productType.js":"25","C:\\proektlar\\crud\\furniture_frontend\\src\\page to section\\ToClient.js":"26","C:\\proektlar\\crud\\furniture_frontend\\src\\store\\suplier.js":"27","C:\\proektlar\\crud\\furniture_frontend\\src\\store\\measurement.js":"28","C:\\proektlar\\crud\\furniture_frontend\\src\\store\\material.js":"29","C:\\proektlar\\crud\\furniture_frontend\\src\\store\\product.js":"30","C:\\proektlar\\crud\\furniture_frontend\\src\\store\\inputProduct.js":"31","C:\\proektlar\\crud\\furniture_frontend\\src\\store\\inputMaterial.js":"32","C:\\proektlar\\crud\\furniture_frontend\\src\\store\\client.js":"33","C:\\proektlar\\crud\\furniture_frontend\\src\\store\\outputMaterial.js":"34","C:\\proektlar\\crud\\furniture_frontend\\src\\component\\Constants.js":"35","C:\\proektlar\\crud\\furniture_frontend\\src\\component\\Navbar.js":"36"},{"size":576,"mtime":1639212003477,"results":"37","hashOfConfig":"38"},{"size":2816,"mtime":1639301202678,"results":"39","hashOfConfig":"38"},{"size":657,"mtime":1639384847320,"results":"40","hashOfConfig":"38"},{"size":763,"mtime":1638424060478,"results":"41","hashOfConfig":"38"},{"size":2191,"mtime":1639211731568,"results":"42","hashOfConfig":"38"},{"size":4924,"mtime":1655179587614,"results":"43","hashOfConfig":"38"},{"size":5579,"mtime":1639296363819,"results":"44","hashOfConfig":"38"},{"size":164,"mtime":1639304816616,"results":"45","hashOfConfig":"38"},{"size":4245,"mtime":1638450277522,"results":"46","hashOfConfig":"38"},{"size":5138,"mtime":1639385825122,"results":"47","hashOfConfig":"38"},{"size":4075,"mtime":1639294319882,"results":"48","hashOfConfig":"38"},{"size":4408,"mtime":1639294319844,"results":"49","hashOfConfig":"38"},{"size":1836,"mtime":1638449979328,"results":"50","hashOfConfig":"38"},{"size":5892,"mtime":1639294268517,"results":"51","hashOfConfig":"38"},{"size":1937,"mtime":1638807162874,"results":"52","hashOfConfig":"38"},{"size":6671,"mtime":1639301145914,"results":"53","hashOfConfig":"38"},{"size":5730,"mtime":1639303113131,"results":"54","hashOfConfig":"38"},{"size":7599,"mtime":1638423380499,"results":"55","hashOfConfig":"38"},{"size":6469,"mtime":1639307159735,"results":"56","hashOfConfig":"38"},{"size":1838,"mtime":1638787826755,"results":"57","hashOfConfig":"38"},{"size":1933,"mtime":1638787768771,"results":"58","hashOfConfig":"38"},{"size":1583,"mtime":1638451985704,"results":"59","hashOfConfig":"38"},{"size":883,"mtime":1638450491176,"results":"60","hashOfConfig":"38"},{"size":333,"mtime":1638450491145,"results":"61","hashOfConfig":"38"},{"size":2290,"mtime":1639216350191,"results":"62","hashOfConfig":"38"},{"size":1570,"mtime":1638453854621,"results":"63","hashOfConfig":"38"},{"size":2214,"mtime":1639228766204,"results":"64","hashOfConfig":"38"},{"size":2302,"mtime":1639296099764,"results":"65","hashOfConfig":"38"},{"size":2286,"mtime":1639294146301,"results":"66","hashOfConfig":"38"},{"size":2238,"mtime":1639296363940,"results":"67","hashOfConfig":"38"},{"size":2389,"mtime":1639307159627,"results":"68","hashOfConfig":"38"},{"size":2434,"mtime":1639299463137,"results":"69","hashOfConfig":"38"},{"size":963,"mtime":1639385606929,"results":"70","hashOfConfig":"38"},{"size":2368,"mtime":1639303445804,"results":"71","hashOfConfig":"38"},{"size":287,"mtime":1655099657154,"results":"72","hashOfConfig":"38"},{"size":3180,"mtime":1639304909004,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"mixngi",{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"76"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"76"},"C:\\proektlar\\crud\\furniture_frontend\\src\\index.js",[],["166","167"],"C:\\proektlar\\crud\\furniture_frontend\\src\\App.js",["168","169","170"],"import React from 'react';\nimport HeaderComponent from \"./component/HeaderComponent\";\nimport {Route, Routes} from \"react-router-dom\";\nimport Catalog from \"./pages/Catalog\";\nimport Dashboard from \"./pages/Dashboard\";\nimport LoginPage from \"./pages/LoginPage\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport {ToastContainer} from \"react-toastify\";\nimport ProductType from \"./pages/ProductType\";\nimport Measurement from \"./pages/Measurement\";\nimport Product from \"./pages/Product\";\nimport Client from \"./pages/Client\";\nimport Supplier from \"./pages/Supplier\";\nimport Material from \"./pages/Material\";\nimport InputMaterial from \"./pages/InputMaterial\";\nimport WareHouseMaterial from \"./pages/WareHouseMaterial\";\nimport OutputMaterial from \"./pages/OutputMaterial\";\nimport ToProductPage from \"./page to section/ToProductPage\";\nimport InputProduct from \"./pages/InputProduct\";\nimport ProductWareHouse from \"./pages/ProductWareHouse\";\nimport OutputProduct from \"./pages/OutputProduct\";\nimport ToMaterial from \"./page to section/ToMaterial\";\nimport ToSuplier from \"./page to section/ToSuplier\";\nimport ToClient from \"./page to section/ToClient\";\nimport SuplierInformation from \"./pages/SuplierInformation\";\nimport ClientInformation from \"./pages/ClientInformation\";\n\nconst App = () => {\n    return (\n        <div>\n            <Routes>\n                <Route exact={true} path='/' element={<LoginPage/>}/>\n                <Route  path='/catalog' element={<Catalog/>}/>\n                <Route  path='/productType' element={<ProductType/>}/>\n                <Route  path='/measurement' element={<Measurement/>}/>\n                <Route  path='/product' element={<Product/>}/>\n                <Route  path='/client' element={<Client/>}/>\n                <Route  path='/suplier' element={<Supplier/>}/>\n                <Route  path='/material' element={<Material/>}/>\n                <Route  path='/inputMaterial' element={<InputMaterial/>}/>\n                <Route  path='/outputMaterial' element={<OutputMaterial/>}/>\n                <Route  path='/wareHouse' element={<WareHouseMaterial/>}/>\n                <Route  path='/toProduct' element={<ToProductPage/>}/>\n                <Route  path='/toMaterial' element={<ToMaterial/>}/>\n                <Route  path='/inputProduct' element={<InputProduct/>}/>\n                <Route  path='/productWareHouse' element={<ProductWareHouse/>}/>\n                <Route  path='/outputProduct' element={<OutputProduct/>}/>\n                <Route  path='/toSuplier' element={<ToSuplier/>}/>\n                <Route  path='/toClient' element={<ToClient/>}/>\n                <Route  path='/suplier/:id' element={<SuplierInformation/>}/>\n                <Route  path='/client/:id' element={<ClientInformation/>}/>\n\n\n            </Routes>\n\n        </div>\n    );\n};\n\nexport default App;\n","C:\\proektlar\\crud\\furniture_frontend\\src\\store\\store.js",[],"C:\\proektlar\\crud\\furniture_frontend\\src\\component\\HeaderComponent.js",["171","172","173"],"import React from 'react';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport {Nav, NavItem} from \"reactstrap\";\r\n\r\nconst HeaderComponent = () => {\r\n    return (\r\n        <div>\r\n\r\n\r\n            <div>\r\n            <nav className=\"navbar navbar-light bg-light\">\r\n                <form className=\"form-inline m-auto\" >\r\n\r\n                    <button className=\"btn btn-outline-success\" type=\"button\"><Link to=\"/InputMaterial\"> Omborga Xomashyo Kirim Qilish </Link></button>\r\n\r\n                    <button className=\"btn btn-outline-success\" type=\"button\"><Link to=\"/outputMaterial\"> Ombordan Xomashyo Chiqim Qilish </Link></button>\r\n\r\n                </form>\r\n            </nav>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeaderComponent;","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\LoginPage.js",["174","175"],"import React, {useEffect, useState} from 'react';\r\nimport {AvForm, AvField} from 'availity-reactstrap-validation';\r\nimport axios from \"axios\";\r\nimport {API_PATH, TOKEN_NAME} from \"../component/Constants\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst LoginPage = () => {\r\n    const history = useNavigate()\r\n\r\n\r\n    function login(event, values) {\r\n        console.log(values)\r\n        axios.post(API_PATH + 'auth/login', {\r\n            username: values.username,\r\n            password: values.password\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            localStorage.setItem(TOKEN_NAME, \"Bearer \" + res.data);\r\n            history(\"/catalog\")\r\n        }).catch((error) => {\r\n            console.log(error);\r\n            toast.error(\"Xatolik!\");\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <AvForm onValidSubmit={login}>\r\n                                    <AvField\r\n                                        name=\"username\"\r\n                                        placeholder=\"Username\"\r\n                                        type=\"text\"\r\n                                        required/>\r\n                                    <AvField\r\n                                        name=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        type=\"password\"\r\n                                        required/>\r\n                                    <button type='submit'\r\n                                            className='btn btn-success btn-block'>\r\n                                        Login\r\n                                    </button>\r\n                                </AvForm>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\ProductType.js",["176"],"C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\Product.js",["177","178","179","180","181","182"],"import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {API_PATH, tokenHeader} from \"../component/Constants\";\r\nimport {toast} from \"react-toastify\";\r\nimport {Button, Modal, ModalBody, ModalHeader, Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {connect} from \"react-redux\";\r\nimport {addProduct, deleteProduct, editProduct, forDeleteModal, getProduct, toggleModal} from \"../store/product\";\r\nimport { getPrType} from \"../store/productType\";\r\n\r\nconst Product = ({productType,products,showModal,deleteModal,\r\n                     deleteProduct, editProduct,addProduct,toggleModal,getProduct,forDeleteModal,getPrType}) => {\r\n    const [currentClient, setcurrentClient] = useState(undefined)\r\n\r\n\r\n    useEffect(() => {\r\n        getPrType()\r\n        getProduct()\r\n    }, [])\r\n\r\n\r\n    const saveClient = (event,values) => {\r\n        if (!currentClient) {\r\n          addProduct(values)\r\n        }else {\r\n          editProduct(currentClient.id,values)\r\n            setcurrentClient(undefined)\r\n        }\r\n        toggleModal()\r\n    }\r\n\r\n    function deleteClient(value) {\r\n      deleteProduct(value.id)\r\n        setcurrentClient(undefined)\r\n        forDeleteModal()\r\n    }\r\n\r\n\r\n    function deleteClientRoad(value) {\r\n        forDeleteModal()\r\n        setcurrentClient(value)\r\n    }\r\n    function editClientRoad(value) {\r\n        setcurrentClient(value)\r\n        toggleModal()\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button className={'btn btn-success '} style={{margin: '20px 0'}} onClick={toggleModal}>Qo'shish</button>\r\n\r\n            <Modal isOpen={showModal}>\r\n                <ModalHeader toggle={() => {\r\n                    toggleModal()\r\n                }}>\r\n                    Maxsulot qoshish\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <AvForm onValidSubmit={saveClient}>\r\n                        {/* With AvField */}\r\n                        {/*<AvField type=\"checkbox\" name=\"active\" label=\"Active\" value=\"false\"/>*/}\r\n                        {/* With AvGroup AvInput and AvFeedback to build your own */}\r\n\r\n                        <AvField name=\"nameUz\" label=\"NameUz\" required  value={currentClient ? currentClient.nameUz : \"\"}/>\r\n                        <AvField name=\"nameRu\" label=\"NameRu\" required value={currentClient ? currentClient.nameRu : \"\"}/>\r\n                        <AvField type=\"select\" name=\"productTypeId\" label=\"Option\" value={currentClient ? currentClient.productTypeId : \"\"}\r\n                                 helpMessage=\"Idk, this is an example. Deal with it!\">\r\n                            <option value=\"\">Maxsulot turini tanlang</option>\r\n                            {productType.map(((value, index) => <option value={value.id}>{value.nameUz}</option>))}\r\n\r\n                                {/*<option>2</option>*/}\r\n                                {/*<option>3</option>*/}\r\n                                {/*<option>4</option>*/}\r\n                                {/*<option>5</option>*/}\r\n                        </AvField>\r\n                        <Button color=\"success\">Save</Button>\r\n                    </AvForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal isOpen={deleteModal}>\r\n                <ModalHeader toggle={() => {\r\n                    forDeleteModal()\r\n                }}>\r\n                    O'chirishni tasdiqlaysizmi?\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Button onClick={() => deleteClient(currentClient)} >xa</Button>\r\n                    <Button onClick={() => forDeleteModal()}>Yo'q</Button>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Table\r\n            >\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        #\r\n                    </th>\r\n                    <th>\r\n                        Rasm\r\n                    </th>\r\n                    <th>\r\n                        NomiUz\r\n                    </th>\r\n                    <th>\r\n                        NomiRu\r\n                    </th>\r\n                    <th>\r\n                        Maxsulot turi\r\n                    </th>\r\n\r\n                    <th>\r\n                        Operations\r\n                    </th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {products.map((value, index) => {\r\n                    return <tr style={{cursor: 'pointer'}}>\r\n                        <td>{index + 1}</td>\r\n                        <td><img src={\"#\"}/></td>\r\n                        <td>{value.nameUz}</td>\r\n                        <td>{value.nameRu}</td>\r\n                        <td>{value.productType.nameUz}</td>\r\n                        <td>\r\n                            <button className={\"btn btn-warning\"} onClick={()=>editClientRoad(value)}>edit</button>\r\n                            <button className={\"btn btn-danger\"} onClick={() => deleteClientRoad(value)}>delete</button>\r\n                        </td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n            \r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps=(state)=>({\r\n    products:state.product.product,\r\n    productType:state.productType.productType,\r\n    showModal:state.product.showModal,\r\n    deleteModal:state.product.deleteModal\r\n})\r\nconst mapDispatchToProps={getProduct,toggleModal,forDeleteModal,getPrType,addProduct,editProduct,deleteProduct}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Product);","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\Dashboard.js",[],"C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\Catalog.js",["183"],"import React, {useEffect, useState} from 'react';\r\nimport Navbar from \"../component/Navbar\";\r\nimport HeaderComponent from \"../component/HeaderComponent\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ProductWareHouse from \"./ProductWareHouse\";\r\nimport axios from \"axios\";\r\nimport {API_PATH, tokenHeader} from \"../component/Constants\";\r\nimport WareHouseMaterial from \"./WareHouseMaterial\";\r\n\r\nconst Catalog = () => {\r\n    const [productWareHouse, setProductWareHouse] = useState([])\r\n    const [matwareHouse, setmatwareHouse] = useState([])\r\n\r\n    const getWareHouseMat = () => {\r\n        axios.get(API_PATH + 'matWareHouse/list', tokenHeader).then(res => {\r\n            // console.log(res.data)\r\n            setmatwareHouse(res.data)\r\n        })\r\n    }\r\n\r\n    const getProductWareHouse = () => {\r\n        axios.get(API_PATH + 'productWareHouse/list', tokenHeader).then(res => {\r\n            // console.log(res.data)\r\n            setProductWareHouse(res.data)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        getProductWareHouse()\r\n        getWareHouseMat()\r\n    }, [])\r\n\r\n    console.log(productWareHouse)\r\n    let sumProduct = productWareHouse.reduce((previousValue, currentValue) => previousValue + currentValue.overalPrice, 0)\r\n    let sumMaterial = matwareHouse.reduce((previousValue, currentValue) => previousValue + currentValue.price, 0)\r\n\r\n    return (\r\n        <div>\r\n            <div style={{position: 'absolute', zIndex: '3'}}>\r\n                <Navbar/>\r\n            </div>\r\n            <div className={\"d-flex\"}>\r\n            </div>\r\n            <ul className={\"nav justify-content-center\"}>\r\n                <li>\r\n                    <button className={\"p-1 bg-success text-white my-1 mx-5\"}><Link to={\"/toProduct\"}\r\n                                                                                    className={\"text-white\"}> Maxsulotlar\r\n                        Bo'limiga O'tish </Link></button>\r\n\r\n                </li>\r\n                <li>\r\n                    <button className={\"p-1 bg-warning text-white my-1 mx-5\"}><Link to={\"/toMaterial\"}\r\n                                                                                    className={\"text-dark\"}> Xomashyolar\r\n                        Bo'limiga O'tish </Link></button>\r\n                </li>\r\n                <li>\r\n                    <button className={\"p-1 bg-danger text-white my-1 mx-5\"}><Link to={\"/toSuplier\"}\r\n                                                                                   className={\"text-dark\"}> Taminotchilar\r\n                        Bo'limiga O'tish\r\n                    </Link></button>\r\n\r\n                </li>\r\n                <li>\r\n                    <button className={\"p-1 bg-dark text-white my-1 mx-5\"}><Link to={\"/toClient\"}\r\n                                                                                   className={\"text-white\"}>\r\n                        Mijozlar Bo'limiga O'tish</Link></button>\r\n                </li>\r\n\r\n            </ul>\r\n\r\n            <div style={{display: \"flex\", justifyContent: 'space-around', margin: '40px 0'}}>\r\n                <div className=\"card\" style={{width: \"490px\"}}>\r\n                    <div className=\"card-header fw-bold\">Ombordagi Maxsulotlar</div>\r\n                    <div className=\"card-body\"> Maxsulotlarning Umumiy Summasi <p\r\n                        className={'fw-bold'}>{' '+sumProduct+' $'} </p></div>\r\n                </div>\r\n                <div className=\"card\" style={{width: \"490px\"}}>\r\n                    <div className=\"card-header fw-bold\">Ombordagi Xomashyolar</div>\r\n                    <div className=\"card-body\">Xomashyolarning Umumiy Summasi <p\r\n                        className={'fw-bold'}>{' ' + sumMaterial + ' $'}</p></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div style={{display: \"flex\", justifyContent: 'space-around'}}>\r\n                <div className=\"card\" style={{width: \"490px\"}}>\r\n                    <div className=\"card-body\"><ProductWareHouse/></div>\r\n                </div>\r\n                <div className=\"card\" style={{width: \"490px\"}}>\r\n                    <div className=\"card-body\"><WareHouseMaterial/></div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Catalog;","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\Client.js",["184"],"import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {API_PATH, tokenHeader} from \"../component/Constants\";\r\nimport {toast} from \"react-toastify\";\r\nimport {Button, Modal, ModalBody, ModalHeader, Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {connect} from \"react-redux\";\r\nimport {getClient, modalToggle} from \"../store/client\";\r\n\r\nconst Client = ({client,showModal,getClient,modalToggle}) => {\r\n    const [deleteModal, setdeleteModal] = useState(false)\r\n    const [currentClient, setcurrentClient] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        getClient()\r\n    }, [])\r\n\r\n\r\n    const saveClient = (event,values) => {\r\n        if (!currentClient) {\r\n            axios.post(API_PATH + \"client/add\", values,tokenHeader).then(res => {\r\n                toast.success(res.data.message)\r\n                getClient()\r\n\r\n            })\r\n        }else {\r\n            axios.put(API_PATH+\"client/edit/\"+currentClient.id,values,tokenHeader).then(res=>{\r\n                getClient()\r\n            })\r\n            setcurrentClient(undefined)\r\n        }\r\n        modalToggle()\r\n    }\r\n\r\n    function deleteClient(value) {\r\n        axios.delete(API_PATH + \"client/\"+value.id,tokenHeader).then(res => {\r\n            getClient()\r\n        })\r\n        setcurrentClient(undefined)\r\n        openDeleteModal()\r\n    }\r\n\r\n    function openDeleteModal() {\r\n        setdeleteModal(!deleteModal)\r\n    }\r\n\r\n    function deleteClientRoad(value) {\r\n        openDeleteModal()\r\n        setcurrentClient(value)\r\n    }\r\n    function editClientRoad(value) {\r\n        setcurrentClient(value)\r\n        modalToggle()\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button className={'btn btn-success '} style={{margin: '20px 0'}} onClick={modalToggle}>Qo'shish</button>\r\n\r\n            <Modal isOpen={showModal}>\r\n                <ModalHeader toggle={() => {\r\n                    modalToggle()\r\n                }}>\r\n                    Mijoz Qo'shish\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <AvForm onValidSubmit={saveClient}>\r\n                        {/* With AvField */}\r\n                        {/*<AvField type=\"checkbox\" name=\"active\" label=\"Active\" value=\"false\"/>*/}\r\n                        {/* With AvGroup AvInput and AvFeedback to build your own */}\r\n                        {/*<AvField type=\"select\" name=\"select\" label=\"Option\"*/}\r\n                        {/*         helpMessage=\"Idk, this is an example. Deal with it!\">*/}\r\n                        {/*    <option>1</option>*/}\r\n                        {/*    <option>2</option>*/}\r\n                        {/*    <option>3</option>*/}\r\n                        {/*    <option>4</option>*/}\r\n                        {/*    <option>5</option>*/}\r\n                        {/*</AvField>*/}\r\n                        <AvField name=\"name\" label=\"Nomi\" required  value={currentClient ? currentClient.name : \"\"}/>\r\n                        <AvField name=\"phone\" label=\"Telefon Raqami\" required value={currentClient ? currentClient.phone : \"\"}/>\r\n                        <Button color=\"success\">Save</Button>\r\n                    </AvForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal isOpen={deleteModal}>\r\n                <ModalHeader toggle={() => {\r\n                    openDeleteModal()\r\n                }}>\r\n                    O'chirishni tasdiqlaysizmi?\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Button onClick={() => deleteClient(currentClient)} >xa</Button>\r\n                    <Button onClick={() => openDeleteModal()}>Yo'q</Button>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Table\r\n            >\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        #\r\n                    </th>\r\n                    <th>\r\n                        Mijoz Ismi\r\n                    </th>\r\n                    <th>\r\n                        Telefon Raqami\r\n                    </th>\r\n                    <th>\r\n                        Operations\r\n                    </th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {client.map((value, index) => {\r\n                    return <tr style={{cursor: 'pointer'}}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{value.name}</td>\r\n                        <td>{value.phone}</td>\r\n                        <td>\r\n                            <button className={\"btn btn-warning\"} onClick={()=>editClientRoad(value)}>edit</button>\r\n                            <button className={\"btn btn-danger\"} onClick={() => deleteClientRoad(value)}>delete</button>\r\n                        </td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps=(state)=>({\r\n    client:state.client.client,\r\n    showModal:state.client.showModal\r\n})\r\nconst mapDispatchToProps ={getClient,modalToggle}\r\nexport default  connect(mapStateToProps,mapDispatchToProps) (Client);","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\Supplier.js",["185"],"import React, {useEffect, useState} from 'react';\r\nimport {Button, Modal, ModalBody, ModalHeader, Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {connect} from \"react-redux\";\r\nimport {addSuplier, deleteSuplier, editSuplier, forDeleteModal, forShowModal, getSuplier} from \"../store/suplier\";\r\n\r\nconst Supplier = ({suplier,deleteModal,showModal,getSuplier,addSuplier,editSuplier,deleteSuplier,forShowModal,forDeleteModal}) => {\r\n\r\n    const [currentClient, setcurrentClient] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        getSuplier()\r\n    }, [])\r\n\r\n    const saveClient = (event,values) => {\r\n        if (!currentClient) {\r\n          addSuplier(values)\r\n        }else {\r\n           editSuplier(currentClient.id,values)\r\n            setcurrentClient(undefined)\r\n        }\r\n        forShowModal()\r\n    }\r\n\r\n    function deleteClient(value) {\r\n      deleteSuplier(value.id)\r\n        setcurrentClient(undefined)\r\n       forDeleteModal()\r\n    }\r\n\r\n\r\n    function deleteClientRoad(value) {\r\nforDeleteModal()\r\n        setcurrentClient(value)\r\n    }\r\n    function editClientRoad(value) {\r\n        setcurrentClient(value)\r\n       forShowModal()\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <button className={'btn btn-success '} style={{margin: '20px 0'}} onClick={forShowModal}>Qo'shish</button>\r\n\r\n            <Modal isOpen={showModal}>\r\n                <ModalHeader toggle={() => {\r\n                    forShowModal()\r\n                }}>\r\n                    Taminotchi Qo'shish\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <AvForm onValidSubmit={saveClient}>\r\n\r\n                        <AvField name=\"name\" label=\"Nomi\" required  value={currentClient ? currentClient.name : \"\"}/>\r\n                        <AvField name=\"phone\" label=\"Telefon Raqami\" required value={currentClient ? currentClient.phone : \"\"}/>\r\n                        <Button color=\"success\">Save</Button>\r\n                    </AvForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal isOpen={deleteModal}>\r\n                <ModalHeader toggle={() => {\r\n                    forDeleteModal()\r\n                }}>\r\n                    O'chirishni tasdiqlaysizmi?\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Button onClick={() => deleteClient(currentClient)} >xa</Button>\r\n                    <Button onClick={() => forDeleteModal()}>Yo'q</Button>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Table\r\n            >\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        #\r\n                    </th>\r\n                    <th>\r\n                        Mijoz Ismi\r\n                    </th>\r\n                    <th>\r\n                        Telefon Raqami\r\n                    </th>\r\n                    <th>\r\n                        Operations\r\n                    </th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {suplier.map((value, index) => {\r\n                    return <tr style={{cursor: 'pointer'}}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{value.name}</td>\r\n                        <td>{value.phone}</td>\r\n                        <td>\r\n                            <button className={\"btn btn-warning\"} onClick={()=>editClientRoad(value)}>edit</button>\r\n                            <button className={\"btn btn-danger\"} onClick={() => deleteClientRoad(value)}>delete</button>\r\n                        </td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps=(state)=>({\r\n    suplier:state.suplier.suplier,\r\n    showModal:state.suplier.showModal,\r\n    deleteModal:state.suplier.deleteModal\r\n})\r\nconst mapDispatchToProps={getSuplier,addSuplier,editSuplier,deleteSuplier,forShowModal,forDeleteModal}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Supplier);","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\Measurement.js",["186"],"import React, {useEffect, useState} from 'react';\r\nimport {Button, Modal, ModalBody, ModalHeader, Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addMeasurement,\r\n    deleteMeasurement,\r\n    editMeasurement,\r\n    forDeleteModall,\r\n    forShowModal,\r\n    getMeasurements\r\n} from \"../store/measurement\";\r\n\r\nconst Measurement = ({deleteModal, measurements, showModal, getMeasurements, forShowModal,\r\n                         forDeleteModall, addMeasurement, deleteMeasurement, editMeasurement\r\n                     }) => {\r\n\r\n\r\n    const [currentClient, setcurrentClient] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        getMeasurements()\r\n    }, [])\r\n\r\n    const saveClient = (event, values) => {\r\n        if (!currentClient) {\r\n            addMeasurement(values)\r\n        } else {\r\n            editMeasurement(currentClient.id, values)\r\n            setcurrentClient(undefined)\r\n        }\r\n        forShowModal()\r\n    }\r\n\r\n    function deleteClient(value) {\r\n        deleteMeasurement(value.id)\r\n        setcurrentClient(undefined)\r\n        forDeleteModall()\r\n    }\r\n\r\n    function deleteClientRoad(value) {\r\n        forDeleteModall()\r\n        setcurrentClient(value)\r\n    }\r\n\r\n    function editClientRoad(value) {\r\n        setcurrentClient(value)\r\n        forShowModal()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <button className={'btn btn-warning '} style={{margin: '20px 0'}} onClick={forShowModal}>Qo'shish</button>\r\n\r\n            <Modal isOpen={showModal}>\r\n                <ModalHeader toggle={() => {\r\n                    forShowModal()\r\n                }}>\r\n                    O'lchov Birligi Qo'shish\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <AvForm onValidSubmit={saveClient}>\r\n                        <AvField name=\"nameUz\" label=\"NameUz\" required\r\n                                 value={currentClient ? currentClient.nameUz : \"\"}/>\r\n                        <AvField name=\"nameRu\" label=\"NameRu\" required\r\n                                 value={currentClient ? currentClient.nameRu : \"\"}/>\r\n                        <Button color=\"success\">Save</Button>\r\n                    </AvForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal isOpen={deleteModal}>\r\n                <ModalHeader toggle={() => {\r\n                    forDeleteModall()\r\n                }}>\r\n                    O'chirishni tasdiqlaysizmi?\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Button onClick={() => deleteClient(currentClient)}>xa</Button>\r\n                    <Button onClick={() => forDeleteModall()}>Yo'q</Button>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Table\r\n            >\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        #\r\n                    </th>\r\n                    <th>\r\n                        NomiUz\r\n                    </th>\r\n                    <th>\r\n                        NomiRu\r\n                    </th>\r\n                    <th>\r\n                        Operations\r\n                    </th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {measurements.map((value, index) => {\r\n                    return <tr style={{cursor: 'pointer'}}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{value.nameUz}</td>\r\n                        <td>{value.nameRu}</td>\r\n                        <td>\r\n                            <button className={\"btn btn-warning\"} onClick={() => editClientRoad(value)}>edit</button>\r\n                            <button className={\"btn btn-danger\"} onClick={() => deleteClientRoad(value)}>delete</button>\r\n                        </td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    measurements: state.measurement.measurement,\r\n    showModal: state.measurement.showModal,\r\n    deleteModal: state.measurement.forDeleteModal\r\n})\r\nconst mapDispatchToProps = {\r\n    getMeasurements,\r\n    forShowModal,\r\n    forDeleteModall,\r\n    deleteMeasurement,\r\n    addMeasurement,\r\n    editMeasurement\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Measurement);","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\ProductWareHouse.js",[],"C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\Material.js",["187","188"],"import React, {useEffect, useState} from 'react';\r\nimport {Button, Modal, ModalBody, ModalHeader, Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {connect} from \"react-redux\";\r\nimport {addMaterial, deleteMaterial, editMaterial, forDeleteModal, getMaterial, modalToggle} from \"../store/material\";\r\nimport {getMeasurements} from \"../store/measurement\";\r\n\r\nconst Material = ({materials, showModal, deleteModal, measurement, getMaterial, forDeleteModal,\r\n                      editMaterial, deleteMaterial,addMaterial, getMeasurements, modalToggle\r\n                  }) => {\r\n    const [currentClient, setcurrentClient] = useState(undefined)\r\n\r\n\r\n    useEffect(() => {\r\n        getMaterial()\r\n        getMeasurements()\r\n    }, [])\r\n\r\n\r\n    const saveClient = (event, values) => {\r\n        if (!currentClient) {\r\n            addMaterial(values)\r\n        } else {\r\n            editMaterial(currentClient.id, values)\r\n            setcurrentClient(undefined)\r\n        }\r\n        modalToggle()\r\n    }\r\n\r\n    function deleteClient(value) {\r\n        deleteMaterial(value.id)\r\n        setcurrentClient(undefined)\r\n        forDeleteModal()\r\n    }\r\n\r\n    function deleteIgnore() {\r\n        forDeleteModal()\r\n        setcurrentClient(undefined)\r\n    }\r\n\r\n    function deleteClientRoad(value) {\r\n        forDeleteModal()\r\n        setcurrentClient(value)\r\n    }\r\n\r\n    function editClientRoad(value) {\r\n        setcurrentClient(value)\r\n        modalToggle()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={'container'}>\r\n            <button className={'btn btn-success '} style={{margin: '20px 0'}} onClick={modalToggle}>Qo'shish</button>\r\n\r\n            <Modal isOpen={showModal}>\r\n                <ModalHeader toggle={() => {\r\n                    modalToggle()\r\n                }}>\r\n                    Xomashyo Qo'shish\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <AvForm onValidSubmit={saveClient}>\r\n                        {/* With AvField */}\r\n                        {/*<AvField type=\"checkbox\" name=\"active\" label=\"Active\" value=\"false\"/>*/}\r\n                        {/* With AvGroup AvInput and AvFeedback to build your own */}\r\n\r\n                        <AvField name=\"code\" label=\"Kod\" required value={currentClient ? currentClient.code : \"\"}/>\r\n                        <AvField name=\"nameUZ\" label=\"NomiUz\" required\r\n                                 value={currentClient ? currentClient.nameUZ : \"\"}/>\r\n                        <AvField name=\"nameRu\" label=\"NomiRu\" required\r\n                                 value={currentClient ? currentClient.nameRu : \"\"}/>\r\n                        <AvField type=\"select\" name=\"measurementId\" label=\"Option\"\r\n                                 helpMessage=\"Idk, this is an example. Deal with it!\">\r\n                            <option value=\"\">O'lchov Birligini Tanlang</option>\r\n                            {measurement.map(((value, index) => {\r\n                                return <option value={value.id}>{value.nameUz}</option>\r\n                            }))}\r\n                        </AvField>\r\n                        <Button color=\"success\">Save</Button>\r\n                    </AvForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal isOpen={deleteModal}>\r\n                <ModalHeader toggle={() => {\r\n                    forDeleteModal()\r\n                }}>\r\n                    O'chirishni tasdiqlaysizmi?\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Button onClick={() => deleteClient(currentClient)}>xa</Button>\r\n                    <Button onClick={() => deleteIgnore()}>Yo'q</Button>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Table\r\n            >\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        #\r\n                    </th>\r\n                    <th>\r\n                        Kod\r\n                    </th>\r\n                    <th>\r\n                        Rasm\r\n                    </th>\r\n                    <th>\r\n                        Nomi(Uz)\r\n                    </th>\r\n                    <th>\r\n                        Nomi(Ru)\r\n                    </th>\r\n                    <th>\r\n                        Norma\r\n                    </th>\r\n                    <th>\r\n                        O'lchov Birligi\r\n                    </th>\r\n                    <th>\r\n                        Amallar\r\n                    </th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {materials.map((value, index) => {\r\n                    return <tr style={{cursor: 'pointer'}}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{value.code}</td>\r\n                        <td><img src={\"#\"}/></td>\r\n                        <td>{value.nameUZ}</td>\r\n                        <td>{value.nameRu}</td>\r\n                        <td>{value.norma}</td>\r\n                        <td>{value.measurement.nameUz}</td>\r\n                        <td>\r\n                            <button className={\"btn btn-warning\"} onClick={() => editClientRoad(value)}>edit</button>\r\n                            <button className={\"btn btn-danger\"} onClick={() => deleteClientRoad(value)}>delete</button>\r\n                        </td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    materials: state.material.material,\r\n    measurement: state.measurement.measurement,\r\n    showModal: state.material.showModal,\r\n    deleteModal: state.material.deleteModal\r\n\r\n})\r\nconst mapDispatchToProps = {getMaterial, getMeasurements, modalToggle, forDeleteModal, addMaterial,deleteMaterial, editMaterial}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Material);","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\WareHouseMaterial.js",[],"C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\InputMaterial.js",["189"],"import React, {useEffect, useState} from 'react';\r\nimport {Button, Modal, ModalBody, ModalHeader, Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addInputMaterial,\r\n    deleteInputMaterial,\r\n    editInputMaterial, forDeleteModal,\r\n    getInputMaterial,\r\n    modalToggle\r\n} from \"../store/inputMaterial\";\r\nimport {getSuplier} from \"../store/suplier\";\r\nimport {getMaterial} from \"../store/material\";\r\n\r\nconst InputMaterial = ({inMaterial, showModal, deleteModal, suplier, material, getInputMaterial,\r\n                           getSuplier, modalToggle, forDeleteModal, deleteInputMaterial, editInputMaterial, getMaterial, addInputMaterial\r\n                       }) => {\r\n\r\n    const [currentClient, setcurrentClient] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        getMaterial()\r\n        getSuplier()\r\n        getInputMaterial()\r\n    }, [])\r\n\r\n\r\n    const saveClient = (event, values) => {\r\n        if (!currentClient) {\r\n            addInputMaterial(values)\r\n        } else {\r\n            editInputMaterial(currentClient.id, values)\r\n            setcurrentClient(undefined)\r\n        }\r\n        modalToggle()\r\n    }\r\n\r\n    function deleteClient(value) {\r\n        deleteInputMaterial(value.id)\r\n        setcurrentClient(undefined)\r\n        forDeleteModal()\r\n    }\r\n\r\n\r\n    function deleteClientRoad(value) {\r\n        forDeleteModal()\r\n        setcurrentClient(value)\r\n    }\r\n\r\n    function editClientRoad(value) {\r\n        setcurrentClient(value)\r\n        modalToggle()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <button className={'btn btn-success '} style={{margin: '20px 0'}} onClick={modalToggle}>Qo'shish</button>\r\n\r\n            <Modal isOpen={showModal}>\r\n                <ModalHeader toggle={() => {\r\n                    modalToggle()\r\n                }}>\r\n                    Omborga Xomashyo qo'shish\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <AvForm onValidSubmit={saveClient}>\r\n                        {/* With AvField */}\r\n                        {/*<AvField type=\"checkbox\" name=\"active\" label=\"Active\" value=\"false\"/>*/}\r\n                        {/* With AvGroup AvInput and AvFeedback to build your own */}\r\n\r\n                        <AvField type=\"select\" name=\"materialId\" label=\"Option\"\r\n                                 helpMessage=\"Idk, this is an example. Deal with it!\">\r\n                            <option value=\"\">Xomashyo turini tanlang</option>\r\n                            {material.map(((value, index) => {\r\n                                return <option value={value.id}>{value.nameUZ}</option>\r\n                            }))}\r\n                        </AvField>\r\n                        <AvField type=\"select\" name=\"supplierId\" label=\"Option\"\r\n                                 helpMessage=\"Idk, this is an example. Deal with it!\">\r\n                            <option value=\"\">Taminotchini tanlang</option>\r\n                            {suplier.map(((value, index) => {\r\n                                return <option value={value.id}>{value.name}</option>\r\n                            }))}\r\n                        </AvField>\r\n                        <AvField name=\"amount\" label=\"Maxsulot miqdori\" required\r\n                                 value={currentClient ? currentClient.amount : \"\"}/>\r\n                        <AvField name=\"price\" label=\"Narxi\" required\r\n                                 value={currentClient ? currentClient.price : \"\"}/>\r\n                        <Button color=\"success\">Save</Button>\r\n                    </AvForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal isOpen={deleteModal}>\r\n                <ModalHeader toggle={() => {\r\n                    forDeleteModal()\r\n                }}>\r\n                    O'chirishni tasdiqlaysizmi?\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Button onClick={() => deleteClient(currentClient)}>xa</Button>\r\n                    <Button onClick={() => forDeleteModal()}>Yo'q</Button>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Table\r\n            >\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        #\r\n                    </th>\r\n                    <th>\r\n                        Nomi\r\n                    </th>\r\n                    <th>\r\n                        Miqdori\r\n                    </th>\r\n                    <th>\r\n                        O'lchov birligi\r\n                    </th>\r\n                    <th>\r\n                        Narxi\r\n                    </th>\r\n                    <th>\r\n                        Jami\r\n                    </th>\r\n                    <th>\r\n                        Sana\r\n                    </th>\r\n                    <th>\r\n                        Taminotchi\r\n                    </th>\r\n                    <th>\r\n                        Amallar\r\n                    </th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {inMaterial.map((value, index) => {\r\n                    return <tr style={{cursor: 'pointer'}}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{value.material.code + ' ' + value.material.nameUZ}</td>\r\n                        <td>{value.amount}</td>\r\n                        <td>{value.material.measurement.nameUz}</td>\r\n                        <td>{value.price + ' $'}</td>\r\n                        <td>{value.price * value.amount + ' $'}</td>\r\n                        <td>{value.date}</td>\r\n                        <td>{value.supplier.name}</td>\r\n                        <td>\r\n                            <button className={\"btn btn-warning\"} onClick={() => editClientRoad(value)}>edit</button>\r\n                            <button className={\"btn btn-danger\"} onClick={() => deleteClientRoad(value)}>delete</button>\r\n                        </td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    inMaterial: state.inputMaterial.inputMaterial,\r\n    deleteModal: state.inputMaterial.deleteModal,\r\n    showModal: state.inputMaterial.showModal,\r\n    suplier: state.suplier.suplier,\r\n    material: state.material.material\r\n})\r\nconst mapDispatchToProps = {\r\n    getInputMaterial,\r\n    getSuplier,\r\n    getMaterial,\r\n    deleteInputMaterial,\r\n    modalToggle,\r\n    forDeleteModal,\r\n    addInputMaterial,\r\n    editInputMaterial\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputMaterial);","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\OutputMaterial.js",["190","191","192","193","194"],"import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {API_PATH, tokenHeader} from \"../component/Constants\";\r\nimport {toast} from \"react-toastify\";\r\nimport {Button, Modal, ModalBody, ModalHeader, Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addOutputMaterial,\r\n    deleteOutputMaterial,\r\n    editOutputMaterial, forDeleteModal,\r\n    getOutputMaterial,\r\n    modalToggle\r\n} from \"../store/outputMaterial\";\r\nimport {getMaterial} from \"../store/material\";\r\n\r\nconst OutputMaterial = ({outMat,showModal,deleteModal,addOutputMaterial,material,modalToggle,deleteOutputMaterial,forDeleteModal,editOutputMaterial,getOutputMaterial,getMaterial}) => {\r\n    const [currentClient, setcurrentClient] = useState(undefined)\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getMaterial()\r\n        getOutputMaterial()\r\n    }, [])\r\n\r\n\r\n    const saveClient = (event, values) => {\r\n        if (!currentClient) {\r\n           addOutputMaterial(values)\r\n        } else {\r\n           editOutputMaterial(currentClient.id,values)\r\n            setcurrentClient(undefined)\r\n        }\r\n        modalToggle()\r\n    }\r\n\r\n    function deleteClient(value) {\r\n       deleteOutputMaterial(value.id)\r\n        setcurrentClient(undefined)\r\n        forDeleteModal()\r\n    }\r\n\r\n\r\n\r\n    function deleteClientRoad(value) {\r\n        forDeleteModal()\r\n        setcurrentClient(value)\r\n    }\r\n\r\n    function editClientRoad(value) {\r\n        setcurrentClient(value)\r\n        modalToggle()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <button className={'btn btn-success '} style={{margin: '20px 0'}} onClick={modalToggle}>Qo'shish</button>\r\n\r\n            <Modal isOpen={showModal}>\r\n                <ModalHeader toggle={() => {\r\n                    modalToggle()\r\n                }}>\r\n                   Ombordagi Xomashyodan Chiqim Qilish\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <AvForm onValidSubmit={saveClient}>\r\n                        {/* With AvField */}\r\n                        {/*<AvField type=\"checkbox\" name=\"active\" label=\"Active\" value=\"false\"/>*/}\r\n                        {/* With AvGroup AvInput and AvFeedback to build your own */}\r\n\r\n                        <AvField type=\"select\" name=\"materialId\" label=\"Option\"\r\n                                 helpMessage=\"Idk, this is an example. Deal with it!\">\r\n                            <option value=\"\">Xomashyo turini tanlang</option>\r\n                            {material.map(((value, index) => {\r\n                                return <option value={value.id}>{value.nameUZ}</option>\r\n                            }))}\r\n                        </AvField>\r\n                        <AvField name=\"amount\" label=\"Maxsulot miqdori\" required value={currentClient ? currentClient.amount : \"\"}/>\r\n                        <AvField name=\"comment\" label=\"Izoh\" required value={currentClient ? currentClient.description : \"\"}/>\r\n                        <Button color=\"success\">Save</Button>\r\n                    </AvForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal isOpen={deleteModal}>\r\n                <ModalHeader toggle={() => {\r\n                    forDeleteModal()\r\n                }}>\r\n                    O'chirishni tasdiqlaysizmi?\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Button onClick={() => deleteClient(currentClient)}>xa</Button>\r\n                    <Button onClick={() => forDeleteModal()}>Yo'q</Button>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Table\r\n            >\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        #\r\n                    </th>\r\n                    <th>\r\n                        Nomi\r\n                    </th>\r\n                    <th>\r\n                        Miqdori\r\n                    </th>\r\n                    <th>\r\n                        O'lchov birligi\r\n                    </th>\r\n\r\n                    <th>\r\n                        Sana\r\n                    </th>\r\n                    <th>\r\n                        Izoh\r\n                    </th>\r\n                    <th>\r\n                        Amallar\r\n                    </th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {outMat.map((value, index) => {\r\n                    return <tr style={{cursor: 'pointer'}}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{value.material.code+' '+value.material.nameUZ}</td>\r\n                        <td>{value.amount}</td>\r\n                        <td>{value.material.measurement.nameUz}</td>\r\n                        <td>{value.date}</td>\r\n                        <td>{value.comment}</td>\r\n                        <td>\r\n                            <button className={\"btn btn-warning\"} onClick={() => editClientRoad(value)}>edit</button>\r\n                            <button className={\"btn btn-danger\"} onClick={() => deleteClientRoad(value)}>delete</button>\r\n                        </td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps=(state)=>({\r\n    outMat:state.outputMaterial.outputMaterial,\r\n    showModal:state.outputMaterial.showModal,\r\n    deleteModal:state.outputMaterial.deleteModal,\r\n    material:state.material.material\r\n\r\n})\r\nconst mapDispatchToProps={getOutputMaterial,getMaterial,addOutputMaterial,editOutputMaterial,deleteOutputMaterial,modalToggle,forDeleteModal}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(OutputMaterial);","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\OutputProduct.js",[],"C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\InputProduct.js",["195","196","197","198","199"],"import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {API_PATH, tokenHeader} from \"../component/Constants\";\r\nimport {toast} from \"react-toastify\";\r\nimport {Button, Modal, ModalBody, ModalHeader, Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addInputProduct,\r\n    deleteInputProduct,\r\n    editInputProduct,\r\n    forDeleteModal,\r\n    getInputProduct,\r\n    modalToggle\r\n} from \"../store/inputProduct\";\r\nimport {getProduct} from \"../store/product\";\r\nimport {getPrType} from \"../store/productType\";\r\n\r\nconst InputProduct = ({inputProduct,product,productType,showModal,deleteModal,getPrType,getProduct,getInputProduct,modalToggle,forDeleteModal,deleteInputProduct,editInputProduct,addInputProduct}) => {\r\n\r\n    const [currentClient, setcurrentClient] = useState(undefined)\r\n\r\n\r\n    useEffect(() => {\r\n        getInputProduct()\r\n        getProduct()\r\n        getPrType()\r\n    }, [])\r\n\r\n\r\n    const saveClient = (event, values) => {\r\n        if (!currentClient) {\r\n            addInputProduct(values)\r\n        } else {\r\n            editInputProduct(currentClient.id,values)\r\n            setcurrentClient(undefined)\r\n        }\r\n        modalToggle()\r\n    }\r\n\r\n    function deleteClient(value) {\r\n      deleteModal(value.id)\r\n        setcurrentClient(undefined)\r\n        forDeleteModal()\r\n    }\r\n\r\n\r\n\r\n    function deleteClientRoad(value) {\r\n        forDeleteModal()\r\n        setcurrentClient(value)\r\n    }\r\n\r\n    function editClientRoad(value) {\r\n        setcurrentClient(value)\r\n        modalToggle()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <button className={'btn btn-success '} style={{margin: '20px 0'}} onClick={modalToggle}>Qo'shish</button>\r\n\r\n            <Modal isOpen={showModal}>\r\n                <ModalHeader toggle={() => {\r\n                    modalToggle()\r\n                }}>\r\n                   Omborga Tayyor Maxsulot Kirimi\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <AvForm onValidSubmit={saveClient}>\r\n                        {/* With AvField */}\r\n                        {/*<AvField type=\"checkbox\" name=\"active\" label=\"Active\" value=\"false\"/>*/}\r\n                        {/* With AvGroup AvInput and AvFeedback to build your own */}\r\n\r\n                        <AvField type=\"select\" name=\"productTypeId\" label=\"Option\"\r\n                                 helpMessage=\"Idk, this is an example. Deal with it!\">\r\n                            <option value=\"\">Maxsulot turini tanlang</option>\r\n                            {productType.map(((value, index) => {\r\n                                return <option value={value.id}>{value.nameUz}</option>\r\n                            }))}\r\n                        </AvField>\r\n                        <AvField type=\"select\" name=\"productId\" label=\"Option\"\r\n                                 helpMessage=\"Idk, this is an example. Deal with it!\">\r\n                            <option value=\"\">Maxsulot Nomini Tanlang</option>\r\n                            {product.map(((value, index) => {\r\n                                return <option value={value.id}>{value.nameUz}</option>\r\n                            }))}\r\n                        </AvField>\r\n                        <AvField name=\"amount\" label=\"Maxsulot miqdori\" required value={currentClient ? currentClient.amount : \"\"}/>\r\n                        <AvField name=\"price\" label=\"Narxi\" required\r\n                                 value={currentClient ? currentClient.price : \"\"}/>\r\n                        <Button color=\"success\">Save</Button>\r\n                    </AvForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal isOpen={deleteModal}>\r\n                <ModalHeader toggle={() => {\r\n                    forDeleteModal()\r\n                }}>\r\n                    O'chirishni tasdiqlaysizmi?\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Button onClick={() => deleteClient(currentClient)}>xa</Button>\r\n                    <Button onClick={() => forDeleteModal()}>Yo'q</Button>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Table\r\n            >\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        #\r\n                    </th>\r\n                    <th>\r\n                        Nomi\r\n                    </th>\r\n                    <th>\r\n                        Maxsulot turi\r\n                    </th>\r\n                    <th>\r\n                        Miqdori\r\n                    </th>\r\n                    <th>\r\n                        Narxi\r\n                    </th>\r\n                    <th>\r\n                        Umumiy summa\r\n                    </th>\r\n\r\n                    <th>\r\n                        Sana\r\n                    </th>\r\n\r\n                    <th>\r\n                        Amallar\r\n                    </th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {inputProduct.map((value, index) => {\r\n                    return <tr style={{cursor: 'pointer'}}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{value.product.nameUz}</td>\r\n                        <td>{value.productType.nameUz}</td>\r\n                        <td>{value.amount}</td>\r\n                        <td>{value.price+' $'}</td>\r\n                        <td>{value.price*value.amount+' $'}</td>\r\n                        <td>{value.inputDate}</td>\r\n                        <td>\r\n                            <button className={\"btn btn-warning\"} onClick={() => editClientRoad(value)}>edit</button>\r\n                            <button className={\"btn btn-danger\"} onClick={() => deleteClientRoad(value)}>delete</button>\r\n                        </td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps=(state)=>({\r\n    inputProduct:state.inputProduct.inputProduct,\r\n    showModal:state.inputProduct.showModal,\r\n    deleteModal:state.inputProduct.deleteModal,\r\n    product:state.product.product,\r\n    productType:state.productType.productType,\r\n\r\n})\r\nconst mapDispatchToProps ={getInputProduct,getProduct,getPrType,modalToggle,forDeleteModal,addInputProduct,editInputProduct,deleteInputProduct}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(InputProduct);","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\SuplierInformation.js",["200"],"import React, {useEffect, useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {API_PATH, tokenHeader} from \"../component/Constants\";\r\nimport {Table} from \"reactstrap\";\r\n\r\nconst SuplierInformation = () => {\r\n    let params=useParams();\r\n   const [suplier,setSuplier]=useState([])\r\n    console.log(params)\r\n\r\n    function getInformationSuplier(){\r\n        axios.get(API_PATH+'suplier/suplierGetMaterial/'+params.id,tokenHeader).then(res=>{\r\n            setSuplier(res.data)\r\n            console.log(res.data)\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n    getInformationSuplier()\r\n\r\n    },[])\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <Table\r\n            >\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        #\r\n                    </th>\r\n                    <th>\r\n                        Taminotchi Nomi\r\n                    </th>\r\n                    <th>\r\n                        Olib Kelgan Xomashyo Nomi\r\n                    </th>\r\n                    <th>\r\n                        Miqdori\r\n                    </th>\r\n                    <th>\r\n                        Sanasi\r\n                    </th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {suplier.map((value, index) => {\r\n                    return <tr style={{cursor: 'pointer'}}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{value.supplier.name}</td>\r\n                        <td>{value.material.nameUZ}</td>\r\n                        <td>{value.amount}</td>\r\n                        <td>{value.date}</td>\r\n\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuplierInformation;","C:\\proektlar\\crud\\furniture_frontend\\src\\pages\\ClientInformation.js",["201"],"import React, {useEffect, useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {API_PATH, tokenHeader} from \"../component/Constants\";\r\nimport {Table} from \"reactstrap\";\r\n\r\nconst ClientInformation = () => {\r\n    const param = useParams()\r\n    const [client, setClient] = useState([])\r\n    function getClient() {\r\n        axios.get(API_PATH + 'client/getOneClientFromOutputProduct/' + param.id, tokenHeader).then(res => {\r\n            setClient(res.data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getClient()\r\n    },[])\r\n\r\n\r\n    console.log(client)\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <Table\r\n            >\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        #\r\n                    </th>\r\n                    <th>\r\n                        Mijoz Ismi\r\n                    </th>\r\n                    <th>\r\n                        Olgan Maxsulot Nomi\r\n                    </th>\r\n                    <th>\r\n                        Miqdori\r\n                    </th>\r\n                    <th>\r\n                        Turi\r\n                    </th>\r\n                    <th>\r\n                        Sanasi\r\n                    </th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {client.map((value, index) => {\r\n                    return <tr style={{cursor: 'pointer'}}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{value.client.name}</td>\r\n                        <td>{value.product.nameUz}</td>\r\n                        <td>{value.productType.nameUz}</td>\r\n                        <td>{value.amount}</td>\r\n                        <td>{value.outDate}</td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClientInformation;","C:\\proektlar\\crud\\furniture_frontend\\src\\page to section\\ToSuplier.js",[],"C:\\proektlar\\crud\\furniture_frontend\\src\\page to section\\ToProductPage.js",["202"],"import React from 'react';\r\nimport HeaderComponent from \"../component/HeaderComponent\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ProductWareHouse from \"../pages/ProductWareHouse\";\r\n\r\nconst ToProductPage = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <nav className=\"navbar navbar-light bg-light\">\r\n                    <form className=\"form-inline m-auto\" >\r\n                        <button className=\"btn btn-outline-success\" type=\"button\"><Link to=\"/inputProduct\"> Omborga Maxsulot Kirim Qilish </Link></button>\r\n\r\n                        <button className=\"btn btn-outline-success\" type=\"button\"><Link to=\"/outputProduct\"> Ombordan Maxsulot Chiqim Qilish </Link></button>\r\n\r\n                    </form>\r\n                </nav>\r\n\r\n                <ProductWareHouse/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToProductPage;","C:\\proektlar\\crud\\furniture_frontend\\src\\page to section\\ToMaterial.js",[],"C:\\proektlar\\crud\\furniture_frontend\\src\\store\\productType.js",[],"C:\\proektlar\\crud\\furniture_frontend\\src\\page to section\\ToClient.js",[],"C:\\proektlar\\crud\\furniture_frontend\\src\\store\\suplier.js",[],"C:\\proektlar\\crud\\furniture_frontend\\src\\store\\measurement.js",[],"C:\\proektlar\\crud\\furniture_frontend\\src\\store\\material.js",["203"],"import {createSlice} from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport {API_PATH, tokenHeader} from \"../component/Constants\";\r\nimport {toast} from \"react-toastify\";\r\nimport data from \"bootstrap/js/src/dom/data\";\r\nconst materialSlice=createSlice({\r\n    name:'material',\r\n    initialState:{\r\n        material:[],\r\n        showModal:false,\r\n        deleteModal:false\r\n    },\r\n    reducers:{\r\n        getMaterial:((state, action) => {\r\n            state.material=action.payload\r\n        }),\r\n        modalHandler:(state => {\r\n            state.showModal=!state.showModal\r\n        }),\r\n        dltModalHandler:((state, action) => {\r\n            state.deleteModal=!state.deleteModal\r\n        })\r\n    }\r\n\r\n})\r\nexport function getMaterial(){\r\n    return function (dispatch){\r\n        axios.get(API_PATH+'material/list',tokenHeader).then((res)=>{\r\n            dispatch({\r\n                type:'material/getMaterial',\r\n                payload:res.data\r\n            })\r\n        })\r\n    }\r\n}\r\nexport function addMaterial(data){\r\n    return function (dispatch){\r\n        axios.post(API_PATH+'material/add',data,tokenHeader).then((res)=>{\r\n            dispatch(getMaterial())\r\n            toast.success(res.data.message)\r\n        }).catch((error)=>{\r\n            toast.error(\"xatolik\")\r\n        })\r\n    }\r\n}\r\nexport function editMaterial(id,data){\r\n    return function (dispatch){\r\n        axios.put(API_PATH+'material/edit/'+id,data,tokenHeader).then((res)=>{\r\n            dispatch(getMaterial())\r\n            toast.success(res.data.message)\r\n        }).catch((error)=>{\r\n            toast.error(\"xatolik\")\r\n        })\r\n    }\r\n}\r\nexport function deleteMaterial(id){\r\n    return function (dispatch){\r\n        axios.delete(API_PATH+'material/'+id,tokenHeader).then((res)=>{\r\n            dispatch(getMaterial())\r\n            toast.success(res.data.message)\r\n        }).catch((error)=>{\r\n            toast.error(\"xatolik\")\r\n        })\r\n\r\n    }\r\n}\r\nexport function modalToggle(){\r\n    return function (dispatch){\r\n        dispatch({\r\n            type:'material/modalHandler'\r\n        })\r\n    }\r\n}\r\nexport function forDeleteModal(){\r\n    return function (dispatch){\r\n        dispatch({\r\n            type:'material/dltModalHandler'\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default materialSlice.reducer","C:\\proektlar\\crud\\furniture_frontend\\src\\store\\product.js",[],"C:\\proektlar\\crud\\furniture_frontend\\src\\store\\inputProduct.js",["204"],"import {createSlice} from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport {API_PATH, tokenHeader} from \"../component/Constants\";\r\nimport {toast} from \"react-toastify\";\r\nimport {getInputMaterial} from \"./inputMaterial\";\r\n\r\nconst inputProductSlice =createSlice({\r\n    name:'inProd',\r\n    initialState:{\r\n        inputProduct:[],\r\n        showModal:false,\r\n        deleteModal:false\r\n    },\r\n    reducers:{\r\n        getInProd:((state, action) => {\r\n            state.inputProduct=action.payload\r\n        }),\r\n        modalHandler: (state => {\r\n            state.showModal = !state.showModal\r\n        }),\r\n        dltModalHandler: ((state, action) => {\r\n            state.deleteModal = !state.deleteModal\r\n        })\r\n    }\r\n})\r\nexport function getInputProduct() {\r\n    return function (dispatch) {\r\n        axios.get(API_PATH + 'inputProduct/list', tokenHeader).then((res) => {\r\n            dispatch({\r\n                type: \"inProd/getInProd\",\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\nexport function addInputProduct(data) {\r\n    return function (dispatch) {\r\n        axios.post(API_PATH + 'inputProduct/add', data, tokenHeader).then((res) => {\r\n            dispatch(getInputProduct())\r\n            toast.success(res.data.message)\r\n        }).catch((error) => {\r\n            toast.error(\"xatolik\")\r\n        })\r\n    }\r\n}\r\nexport function editInputProduct(id, data) {\r\n    return function (dispatch) {\r\n        axios.put(API_PATH + 'inputProduct/' + id, data, tokenHeader).then((res) => {\r\n            dispatch(getInputProduct())\r\n            toast.success(res.data.message)\r\n        }).catch((error) => {\r\n            toast.error(\"xatolik\")\r\n        })\r\n    }\r\n}\r\nexport function deleteInputProduct(id) {\r\n    return function (dispatch) {\r\n        axios.delete(API_PATH + 'inputProduct/' + id, tokenHeader).then((res) => {\r\n            dispatch(getInputProduct())\r\n            toast.success(res.data.message)\r\n        }).catch((error) => {\r\n            toast.error(\"xatolik\")\r\n        })\r\n\r\n    }\r\n}\r\nexport function modalToggle() {\r\n    return function (dispatch) {\r\n        dispatch({\r\n            type: 'inProd/modalHandler'\r\n        })\r\n    }\r\n}\r\nexport function forDeleteModal() {\r\n    return function (dispatch) {\r\n        dispatch({\r\n            type: 'inProd/dltModalHandler'\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default inputProductSlice.reducer","C:\\proektlar\\crud\\furniture_frontend\\src\\store\\inputMaterial.js",["205"],"import {createSlice} from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport {API_PATH, tokenHeader} from \"../component/Constants\";\r\nimport {toast} from \"react-toastify\";\r\nimport {getMaterial} from \"./material\";\r\n\r\nconst inputMaterialSlice = createSlice({\r\n    name: 'inMaterial',\r\n    initialState: {\r\n        inputMaterial: [],\r\n        showModal: false,\r\n        deleteModal: false\r\n    },\r\n    reducers: {\r\n        getInputMaterial: ((state, action) => {\r\n            state.inputMaterial = action.payload\r\n        }),\r\n        modalHandler: (state => {\r\n            state.showModal = !state.showModal\r\n        }),\r\n        dltModalHandler: ((state, action) => {\r\n            state.deleteModal = !state.deleteModal\r\n        })\r\n    }\r\n})\r\n\r\nexport function getInputMaterial() {\r\n    return function (dispatch) {\r\n        axios.get(API_PATH + 'inputMaterial/list', tokenHeader).then((res) => {\r\n            dispatch({\r\n                type: \"inMaterial/getInputMaterial\",\r\n                payload: res.data\r\n            })\r\n        })\r\n    }\r\n}\r\nexport function addInputMaterial(data) {\r\n    return function (dispatch) {\r\n        axios.post(API_PATH + 'inputMaterial/add', data, tokenHeader).then((res) => {\r\n            dispatch(getInputMaterial())\r\n            toast.success(res.data.message)\r\n        }).catch((error) => {\r\n            toast.error(\"xatolik\")\r\n        })\r\n    }\r\n}\r\nexport function editInputMaterial(id, data) {\r\n    return function (dispatch) {\r\n        axios.put(API_PATH + 'inputMaterial/' + id, data, tokenHeader).then((res) => {\r\n            dispatch(getInputMaterial())\r\n            toast.success(res.data.message)\r\n        }).catch((error) => {\r\n            toast.error(\"xatolik\")\r\n        })\r\n    }\r\n}\r\nexport function deleteInputMaterial(id) {\r\n    return function (dispatch) {\r\n        axios.delete(API_PATH + 'inputMaterial/' + id, tokenHeader).then((res) => {\r\n            dispatch(getInputMaterial())\r\n            toast.success(res.data.message)\r\n        }).catch((error) => {\r\n            toast.error(\"xatolik\")\r\n        })\r\n\r\n    }\r\n}\r\nexport function modalToggle() {\r\n    return function (dispatch) {\r\n        dispatch({\r\n            type: 'inMaterial/modalHandler'\r\n        })\r\n    }\r\n}\r\nexport function forDeleteModal() {\r\n    return function (dispatch) {\r\n        dispatch({\r\n            type: 'inMaterial/dltModalHandler'\r\n        })\r\n    }\r\n}\r\n\r\nexport default inputMaterialSlice.reducer","C:\\proektlar\\crud\\furniture_frontend\\src\\store\\client.js",[],"C:\\proektlar\\crud\\furniture_frontend\\src\\store\\outputMaterial.js",[],"C:\\proektlar\\crud\\furniture_frontend\\src\\component\\Constants.js",[],"C:\\proektlar\\crud\\furniture_frontend\\src\\component\\Navbar.js",["206","207","208","209"],"import React from 'react';\r\nimport './dashbord.css'\r\nimport icon from './images/exit.png'\r\nimport max from './images/max.png'\r\nimport exitt from './images/exitt.png'\r\nimport key from './images/key.png'\r\nimport product from './images/produc.png'\r\nimport order from './images/order.png'\r\nimport setting from './images/setting.png'\r\nimport acsiya from './images/acsiya.png'\r\nimport user from './images/user.png'\r\nimport set from './images/set.png'\r\n\r\nimport {useState} from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    const [open, setOpen] = useState(false)\r\n    let navigate = useNavigate();\r\n    return (\r\n        <>\r\n            <img onClick={() => setOpen(!open)} style={{cursor: 'pointer', position: 'absolute', top: '60px',left:\"0\"}} src={set}\r\n                 alt=\"\"/>\r\n            <div className={open ? \"main\" : \"domain\"}>\r\n                <div className='dashboard'><img src={order} alt=\"\" style={{\r\n                    marginLeft: '10px',\r\n                    marginRight: '10px'\r\n                }}/><Link to=\"/productType\" className={'text-dark'}>Maxsulot turlari</Link>\r\n                </div>\r\n                <div className='dashboard'><img src={setting} alt=\"\" style={{\r\n                    marginLeft: '10px',\r\n                    marginRight: '10px'\r\n                }}/><Link to=\"/measurement\" className={'text-dark'}>O'lchov Birligi</Link>\r\n                </div>\r\n                <div className='dashboard'><img src={product} alt=\"\" style={{marginLeft: '10px', marginRight: '10px'}}/>\r\n                    <Link to=\"/product\" className={'text-dark'}>Mahsulotlar</Link>\r\n                </div>\r\n                <div className='dashboard'><img src={max} alt=\"\" style={{marginLeft: '10px', marginRight: '10px'}}/>\r\n                    <Link to=\"/client\" className={'text-dark'}>Mijozlar</Link>\r\n                </div>\r\n                <div className='dashboard'><img src={acsiya} alt=\"\" style={{marginLeft: '10px', marginRight: '10px'}}/>\r\n                    <Link to=\"/suplier\" className={'text-dark'}>Ta'minotchi</Link>\r\n                </div>\r\n                {/*<div className='dashboard'><img src={max} alt=\"\" style={{marginLeft: '10px', marginRight: '10px'}}/>Reklama*/}\r\n                {/*</div>*/}\r\n                <div className='dashboard'><img src={user} alt=\"\" style={{marginLeft: '10px', marginRight: '10px'}}/>\r\n                    <Link to=\"/user\" className={'text-dark'}>Foydalanuvchilar</Link>\r\n                </div>\r\n                <div className='dashboard'><img src={max} alt=\"\" style={{marginLeft: '10px', marginRight: '10px'}}/>\r\n                    <Link to=\"/material\" className={'text-dark'}>Xomashyolar</Link>\r\n                </div>\r\n                {/*<div className='dashboard'><img src={max} alt=\"\" style={{marginLeft: '10px', marginRight: '10px'}}/>*/}\r\n                {/*    <Link to=\"/material\">Xomashyolar</Link>*/}\r\n                {/*</div>*/}\r\n                {/*<div className='dashboard'><img src={exitt} alt=\"\" style={{marginLeft: '10px', marginRight: '10px'}}/>Chiqish*/}\r\n                {/*</div>*/}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Navbar;",{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":23},{"ruleId":"214","severity":1,"message":"218","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":17},{"ruleId":"214","severity":1,"message":"219","line":8,"column":9,"nodeType":"216","messageId":"217","endLine":8,"endColumn":23},{"ruleId":"214","severity":1,"message":"220","line":2,"column":15,"nodeType":"216","messageId":"217","endLine":2,"endColumn":22},{"ruleId":"214","severity":1,"message":"221","line":3,"column":9,"nodeType":"216","messageId":"217","endLine":3,"endColumn":12},{"ruleId":"214","severity":1,"message":"222","line":3,"column":14,"nodeType":"216","messageId":"217","endLine":3,"endColumn":21},{"ruleId":"214","severity":1,"message":"223","line":1,"column":16,"nodeType":"216","messageId":"217","endLine":1,"endColumn":25},{"ruleId":"214","severity":1,"message":"224","line":1,"column":27,"nodeType":"216","messageId":"217","endLine":1,"endColumn":35},{"ruleId":"225","severity":1,"message":"226","line":21,"column":8,"nodeType":"227","endLine":21,"endColumn":10,"suggestions":"228"},{"ruleId":"214","severity":1,"message":"229","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":13},{"ruleId":"214","severity":1,"message":"230","line":3,"column":9,"nodeType":"216","messageId":"217","endLine":3,"endColumn":17},{"ruleId":"214","severity":1,"message":"231","line":3,"column":19,"nodeType":"216","messageId":"217","endLine":3,"endColumn":30},{"ruleId":"214","severity":1,"message":"232","line":4,"column":9,"nodeType":"216","messageId":"217","endLine":4,"endColumn":14},{"ruleId":"225","severity":1,"message":"233","line":19,"column":8,"nodeType":"227","endLine":19,"endColumn":10,"suggestions":"234"},{"ruleId":"235","severity":1,"message":"236","line":124,"column":29,"nodeType":"237","endLine":124,"endColumn":45},{"ruleId":"214","severity":1,"message":"215","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":23},{"ruleId":"225","severity":1,"message":"238","line":16,"column":8,"nodeType":"227","endLine":16,"endColumn":10,"suggestions":"239"},{"ruleId":"225","severity":1,"message":"240","line":13,"column":8,"nodeType":"227","endLine":13,"endColumn":10,"suggestions":"241"},{"ruleId":"225","severity":1,"message":"242","line":23,"column":8,"nodeType":"227","endLine":23,"endColumn":10,"suggestions":"243"},{"ruleId":"225","severity":1,"message":"244","line":17,"column":8,"nodeType":"227","endLine":17,"endColumn":10,"suggestions":"245"},{"ruleId":"235","severity":1,"message":"236","line":131,"column":29,"nodeType":"237","endLine":131,"endColumn":45},{"ruleId":"225","severity":1,"message":"246","line":25,"column":8,"nodeType":"227","endLine":25,"endColumn":10,"suggestions":"247"},{"ruleId":"214","severity":1,"message":"229","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":13},{"ruleId":"214","severity":1,"message":"230","line":3,"column":9,"nodeType":"216","messageId":"217","endLine":3,"endColumn":17},{"ruleId":"214","severity":1,"message":"231","line":3,"column":19,"nodeType":"216","messageId":"217","endLine":3,"endColumn":30},{"ruleId":"214","severity":1,"message":"232","line":4,"column":9,"nodeType":"216","messageId":"217","endLine":4,"endColumn":14},{"ruleId":"225","severity":1,"message":"248","line":26,"column":8,"nodeType":"227","endLine":26,"endColumn":10,"suggestions":"249"},{"ruleId":"214","severity":1,"message":"229","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":13},{"ruleId":"214","severity":1,"message":"230","line":3,"column":9,"nodeType":"216","messageId":"217","endLine":3,"endColumn":17},{"ruleId":"214","severity":1,"message":"231","line":3,"column":19,"nodeType":"216","messageId":"217","endLine":3,"endColumn":30},{"ruleId":"214","severity":1,"message":"232","line":4,"column":9,"nodeType":"216","messageId":"217","endLine":4,"endColumn":14},{"ruleId":"225","severity":1,"message":"250","line":28,"column":8,"nodeType":"227","endLine":28,"endColumn":10,"suggestions":"251"},{"ruleId":"225","severity":1,"message":"252","line":23,"column":7,"nodeType":"227","endLine":23,"endColumn":9,"suggestions":"253"},{"ruleId":"225","severity":1,"message":"254","line":18,"column":7,"nodeType":"227","endLine":18,"endColumn":9,"suggestions":"255"},{"ruleId":"214","severity":1,"message":"215","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":23},{"ruleId":"214","severity":1,"message":"256","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":12},{"ruleId":"214","severity":1,"message":"257","line":5,"column":9,"nodeType":"216","messageId":"217","endLine":5,"endColumn":25},{"ruleId":"214","severity":1,"message":"258","line":5,"column":9,"nodeType":"216","messageId":"217","endLine":5,"endColumn":20},{"ruleId":"214","severity":1,"message":"259","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":12},{"ruleId":"214","severity":1,"message":"260","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":13},{"ruleId":"214","severity":1,"message":"261","line":6,"column":8,"nodeType":"216","messageId":"217","endLine":6,"endColumn":11},{"ruleId":"214","severity":1,"message":"262","line":19,"column":9,"nodeType":"216","messageId":"217","endLine":19,"endColumn":17},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"no-unused-vars","'HeaderComponent' is defined but never used.","Identifier","unusedVar","'Dashboard' is defined but never used.","'ToastContainer' is defined but never used.","'NavLink' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPrType'. Either include it or remove the dependency array. If 'getPrType' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["265"],"'axios' is defined but never used.","'API_PATH' is defined but never used.","'tokenHeader' is defined but never used.","'toast' is defined but never used.","React Hook useEffect has missing dependencies: 'getPrType' and 'getProduct'. Either include them or remove the dependency array. If 'getPrType' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["266"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getClient'. Either include it or remove the dependency array. If 'getClient' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["267"],"React Hook useEffect has a missing dependency: 'getSuplier'. Either include it or remove the dependency array. If 'getSuplier' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["268"],"React Hook useEffect has a missing dependency: 'getMeasurements'. Either include it or remove the dependency array. If 'getMeasurements' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["269"],"React Hook useEffect has missing dependencies: 'getMaterial' and 'getMeasurements'. Either include them or remove the dependency array. If 'getMaterial' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["270"],"React Hook useEffect has missing dependencies: 'getInputMaterial', 'getMaterial', and 'getSuplier'. Either include them or remove the dependency array. If 'getMaterial' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["271"],"React Hook useEffect has missing dependencies: 'getMaterial' and 'getOutputMaterial'. Either include them or remove the dependency array. If 'getMaterial' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["272"],"React Hook useEffect has missing dependencies: 'getInputProduct', 'getPrType', and 'getProduct'. Either include them or remove the dependency array. If 'getInputProduct' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["273"],"React Hook useEffect has a missing dependency: 'getInformationSuplier'. Either include it or remove the dependency array.",["274"],"React Hook useEffect has a missing dependency: 'getClient'. Either include it or remove the dependency array.",["275"],"'data' is defined but never used.","'getInputMaterial' is defined but never used.","'getMaterial' is defined but never used.","'icon' is defined but never used.","'exitt' is defined but never used.","'key' is defined but never used.","'navigate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"280","fix":"296"},"Update the dependencies array to be: [getPrType]",{"range":"297","text":"298"},"Update the dependencies array to be: [getPrType, getProduct]",{"range":"299","text":"300"},"Update the dependencies array to be: [getClient]",{"range":"301","text":"302"},"Update the dependencies array to be: [getSuplier]",{"range":"303","text":"304"},"Update the dependencies array to be: [getMeasurements]",{"range":"305","text":"306"},"Update the dependencies array to be: [getMaterial, getMeasurements]",{"range":"307","text":"308"},"Update the dependencies array to be: [getInputMaterial, getMaterial, getSuplier]",{"range":"309","text":"310"},"Update the dependencies array to be: [getMaterial, getOutputMaterial]",{"range":"311","text":"312"},"Update the dependencies array to be: [getInputProduct, getPrType, getProduct]",{"range":"313","text":"314"},"Update the dependencies array to be: [getInformationSuplier]",{"range":"315","text":"316"},{"range":"317","text":"302"},[676,678],"[getPrType]",[847,849],"[getPrType, getProduct]",[660,662],"[getClient]",[602,604],"[getSuplier]",[747,749],"[getMeasurements]",[774,776],"[getMaterial, getMeasurements]",[940,942],"[getInputMaterial, getMaterial, getSuplier]",[929,931],"[getMaterial, getOutputMaterial]",[1003,1005],"[getInputProduct, getPrType, getProduct]",[642,644],"[getInformationSuplier]",[577,579]]