{"ast":null,"code":"var _jsxFileName = \"C:\\\\proektlar\\\\crud\\\\furniture_frontend\\\\src\\\\pages\\\\Material.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Modal, ModalBody, ModalHeader, Table } from \"reactstrap\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport { connect } from \"react-redux\";\nimport { addMaterial, deleteMaterial, editMaterial, forDeleteModal, getMaterial, modalToggle } from \"../store/material\";\nimport { getMeasurements } from \"../store/measurement\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Material = ({\n  materials,\n  showModal,\n  deleteModal,\n  measurement,\n  getMaterial,\n  forDeleteModal,\n  editMaterial,\n  deleteMaterial,\n  addMaterial,\n  getMeasurements,\n  modalToggle\n}) => {\n  _s();\n\n  const [currentClient, setcurrentClient] = useState(undefined);\n  useEffect(() => {\n    getMaterial();\n    getMeasurements();\n  }, []);\n\n  const saveClient = (event, values) => {\n    if (!currentClient) {\n      addMaterial(values);\n    } else {\n      editMaterial(currentClient.id, values);\n      setcurrentClient(undefined);\n    }\n\n    modalToggle();\n  };\n\n  function deleteClient(value) {\n    deleteMaterial(value.id);\n    setcurrentClient(undefined);\n    forDeleteModal();\n  }\n\n  function deleteIgnore() {\n    forDeleteModal();\n    setcurrentClient(undefined);\n  }\n\n  function deleteClientRoad(value) {\n    forDeleteModal();\n    setcurrentClient(value);\n  }\n\n  function editClientRoad(value) {\n    setcurrentClient(value);\n    modalToggle();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'container',\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: 'btn btn-success ',\n      style: {\n        margin: '20px 0'\n      },\n      onClick: modalToggle,\n      children: \"Qo'shish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModal,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          modalToggle();\n        },\n        children: \"Xomashyo Qo'shish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(AvForm, {\n          onValidSubmit: saveClient,\n          children: [/*#__PURE__*/_jsxDEV(AvField, {\n            name: \"code\",\n            label: \"Kod\",\n            required: true,\n            value: currentClient ? currentClient.code : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            name: \"nameUZ\",\n            label: \"NomiUz\",\n            required: true,\n            value: currentClient ? currentClient.nameUZ : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            name: \"nameRu\",\n            label: \"NomiRu\",\n            required: true,\n            value: currentClient ? currentClient.nameRu : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            type: \"select\",\n            name: \"measurementId\",\n            label: \"Option\",\n            helpMessage: \"Idk, this is an example. Deal with it!\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"O'lchov Birligini Tanlang\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), measurement.map((value, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: value.id,\n                children: value.nameUz\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: deleteModal,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          forDeleteModal();\n        },\n        children: \"O'chirishni tasdiqlaysizmi?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => deleteClient(currentClient),\n          children: \"xa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => deleteIgnore(),\n          children: \"Yo'q\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Kod\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rasm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nomi(Uz)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nomi(Ru)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Norma\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"O'lchov Birligi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amallar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: materials.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.nameUZ\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.nameRu\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.norma\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.measurement.nameUz\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-warning\",\n                onClick: () => editClientRoad(value),\n                children: \"edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => deleteClientRoad(value),\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Material, \"dXbtFMBL+/j5+ClIr/AU4JQGgTM=\");\n\n_c = Material;\n\nconst mapStateToProps = state => ({\n  materials: state.material.material,\n  measurement: state.measurement.measurement,\n  showModal: state.material.showModal,\n  deleteModal: state.material.deleteModal\n});\n\nconst mapDispatchToProps = {\n  getMaterial,\n  getMeasurements,\n  modalToggle,\n  forDeleteModal,\n  addMaterial,\n  deleteMaterial,\n  editMaterial\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Material);\n\nvar _c;\n\n$RefreshReg$(_c, \"Material\");","map":{"version":3,"sources":["C:/proektlar/crud/furniture_frontend/src/pages/Material.js"],"names":["React","useEffect","useState","Button","Modal","ModalBody","ModalHeader","Table","AvField","AvForm","connect","addMaterial","deleteMaterial","editMaterial","forDeleteModal","getMaterial","modalToggle","getMeasurements","Material","materials","showModal","deleteModal","measurement","currentClient","setcurrentClient","undefined","saveClient","event","values","id","deleteClient","value","deleteIgnore","deleteClientRoad","editClientRoad","margin","code","nameUZ","nameRu","map","index","nameUz","cursor","norma","mapStateToProps","state","material","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Button, Modal, ModalBody, ModalHeader, Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {connect} from \"react-redux\";\r\nimport {addMaterial, deleteMaterial, editMaterial, forDeleteModal, getMaterial, modalToggle} from \"../store/material\";\r\nimport {getMeasurements} from \"../store/measurement\";\r\n\r\nconst Material = ({materials, showModal, deleteModal, measurement, getMaterial, forDeleteModal,\r\n                      editMaterial, deleteMaterial,addMaterial, getMeasurements, modalToggle\r\n                  }) => {\r\n    const [currentClient, setcurrentClient] = useState(undefined)\r\n\r\n\r\n    useEffect(() => {\r\n        getMaterial()\r\n        getMeasurements()\r\n    }, [])\r\n\r\n\r\n    const saveClient = (event, values) => {\r\n        if (!currentClient) {\r\n            addMaterial(values)\r\n        } else {\r\n            editMaterial(currentClient.id, values)\r\n            setcurrentClient(undefined)\r\n        }\r\n        modalToggle()\r\n    }\r\n\r\n    function deleteClient(value) {\r\n        deleteMaterial(value.id)\r\n        setcurrentClient(undefined)\r\n        forDeleteModal()\r\n    }\r\n\r\n    function deleteIgnore() {\r\n        forDeleteModal()\r\n        setcurrentClient(undefined)\r\n    }\r\n\r\n    function deleteClientRoad(value) {\r\n        forDeleteModal()\r\n        setcurrentClient(value)\r\n    }\r\n\r\n    function editClientRoad(value) {\r\n        setcurrentClient(value)\r\n        modalToggle()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={'container'}>\r\n            <button className={'btn btn-success '} style={{margin: '20px 0'}} onClick={modalToggle}>Qo'shish</button>\r\n\r\n            <Modal isOpen={showModal}>\r\n                <ModalHeader toggle={() => {\r\n                    modalToggle()\r\n                }}>\r\n                    Xomashyo Qo'shish\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <AvForm onValidSubmit={saveClient}>\r\n                        {/* With AvField */}\r\n                        {/*<AvField type=\"checkbox\" name=\"active\" label=\"Active\" value=\"false\"/>*/}\r\n                        {/* With AvGroup AvInput and AvFeedback to build your own */}\r\n\r\n                        <AvField name=\"code\" label=\"Kod\" required value={currentClient ? currentClient.code : \"\"}/>\r\n                        <AvField name=\"nameUZ\" label=\"NomiUz\" required\r\n                                 value={currentClient ? currentClient.nameUZ : \"\"}/>\r\n                        <AvField name=\"nameRu\" label=\"NomiRu\" required\r\n                                 value={currentClient ? currentClient.nameRu : \"\"}/>\r\n                        <AvField type=\"select\" name=\"measurementId\" label=\"Option\"\r\n                                 helpMessage=\"Idk, this is an example. Deal with it!\">\r\n                            <option value=\"\">O'lchov Birligini Tanlang</option>\r\n                            {measurement.map(((value, index) => {\r\n                                return <option value={value.id}>{value.nameUz}</option>\r\n                            }))}\r\n                        </AvField>\r\n                        <Button color=\"success\">Save</Button>\r\n                    </AvForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal isOpen={deleteModal}>\r\n                <ModalHeader toggle={() => {\r\n                    forDeleteModal()\r\n                }}>\r\n                    O'chirishni tasdiqlaysizmi?\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Button onClick={() => deleteClient(currentClient)}>xa</Button>\r\n                    <Button onClick={() => deleteIgnore()}>Yo'q</Button>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Table\r\n            >\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        #\r\n                    </th>\r\n                    <th>\r\n                        Kod\r\n                    </th>\r\n                    <th>\r\n                        Rasm\r\n                    </th>\r\n                    <th>\r\n                        Nomi(Uz)\r\n                    </th>\r\n                    <th>\r\n                        Nomi(Ru)\r\n                    </th>\r\n                    <th>\r\n                        Norma\r\n                    </th>\r\n                    <th>\r\n                        O'lchov Birligi\r\n                    </th>\r\n                    <th>\r\n                        Amallar\r\n                    </th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {materials.map((value, index) => {\r\n                    return <tr style={{cursor: 'pointer'}}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{value.code}</td>\r\n                        <td><img src={\"#\"}/></td>\r\n                        <td>{value.nameUZ}</td>\r\n                        <td>{value.nameRu}</td>\r\n                        <td>{value.norma}</td>\r\n                        <td>{value.measurement.nameUz}</td>\r\n                        <td>\r\n                            <button className={\"btn btn-warning\"} onClick={() => editClientRoad(value)}>edit</button>\r\n                            <button className={\"btn btn-danger\"} onClick={() => deleteClientRoad(value)}>delete</button>\r\n                        </td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    materials: state.material.material,\r\n    measurement: state.measurement.measurement,\r\n    showModal: state.material.showModal,\r\n    deleteModal: state.material.deleteModal\r\n\r\n})\r\nconst mapDispatchToProps = {getMaterial, getMeasurements, modalToggle, forDeleteModal, addMaterial,deleteMaterial, editMaterial}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Material);"]},"metadata":{},"sourceType":"module"}