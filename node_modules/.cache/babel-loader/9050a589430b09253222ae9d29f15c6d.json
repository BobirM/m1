{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { API_PATH, tokenHeader } from \"../component/Constants\";\nimport { toast } from \"react-toastify\";\nconst measurementSlice = createSlice({\n  name: 'measurement',\n  initialState: {\n    measurement: [],\n    showModal: false,\n    forDeleteModal: false\n  },\n  reducers: {\n    getMeasurement: (state, action) => {\n      state.measurement = action.payload;\n    },\n    modalHandler: state => {\n      state.showModal = !state.showModal;\n    },\n    forDltModal: (state, action) => {\n      state.forDeleteModal = !state.forDeleteModal;\n    }\n  }\n});\nexport function getMeasurements() {\n  return function (dispatch) {\n    axios.get(API_PATH + 'measurement/list', tokenHeader).then(res => {\n      dispatch({\n        type: 'measurement/getMeasurement',\n        payload: res.data\n      });\n    });\n  };\n}\nexport function addMeasurement(data) {\n  return function (dispatch) {\n    axios.post(API_PATH + 'measurement/add', data, tokenHeader).then(res => {\n      dispatch(getMeasurements());\n      toast.success(res.data.message);\n    }).catch(error => {\n      toast.error(\"xatolik\");\n    });\n  };\n}\nexport function editMeasurement(id, data) {\n  return function (dispatch) {\n    axios.put(API_PATH + 'measurement/edit/' + id, data, tokenHeader).then(res => {\n      dispatch(getMeasurements());\n      toast.success(\"O'zgartirildi\");\n    }).catch(error => {\n      toast.error(\"Xatolik\");\n    });\n  };\n}\nexport function deleteMeasurement(id) {\n  return function (dispatch) {\n    axios.delete(API_PATH + 'measurement/' + id, tokenHeader).then(res => {\n      dispatch(getMeasurements());\n      toast.success(res.data.message);\n    }).catch(error => {\n      toast.error(\"xatolik\");\n    });\n  };\n}\nexport function forShowModal() {\n  return function (dispatch) {\n    dispatch({\n      type: 'measurement/modalHandler'\n    });\n  };\n}\nexport function forDeleteModall() {\n  return function (dispatch) {\n    dispatch({\n      type: 'measurement/forDltModal'\n    });\n  };\n}\nexport default measurementSlice.reducer;","map":{"version":3,"sources":["C:/proektlar/crud/furniture_frontend/src/store/measurement.js"],"names":["createSlice","axios","API_PATH","tokenHeader","toast","measurementSlice","name","initialState","measurement","showModal","forDeleteModal","reducers","getMeasurement","state","action","payload","modalHandler","forDltModal","getMeasurements","dispatch","get","then","res","type","data","addMeasurement","post","success","message","catch","error","editMeasurement","id","put","deleteMeasurement","delete","forShowModal","forDeleteModall","reducer"],"mappings":"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","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport {API_PATH, tokenHeader} from \"../component/Constants\";\r\nimport {toast} from \"react-toastify\";\r\nconst measurementSlice=createSlice({\r\n    name:'measurement',\r\n    initialState:{\r\n        measurement:[],\r\n        showModal:false,\r\n        forDeleteModal:false\r\n    },\r\n    reducers:{\r\n      getMeasurement:((state, action) => {\r\n          state.measurement=action.payload\r\n      }),\r\n        modalHandler:((state => {\r\n            state.showModal=!state.showModal\r\n        })),\r\n        forDltModal:(((state, action) => {\r\n            state.forDeleteModal=!state.forDeleteModal\r\n        }))\r\n    }\r\n})\r\n\r\n\r\nexport function getMeasurements(){\r\n    return function (dispatch){\r\n        axios.get(API_PATH+'measurement/list',tokenHeader).then((res)=>{\r\n            dispatch({\r\n                type:'measurement/getMeasurement',\r\n                payload:res.data\r\n            })\r\n        })\r\n    }\r\n}\r\nexport function addMeasurement(data){\r\n    return function (dispatch){\r\n        axios.post(API_PATH+'measurement/add',data,tokenHeader).then((res)=>{\r\n            dispatch(getMeasurements())\r\n            toast.success(res.data.message)\r\n        }).catch((error)=>{\r\n            toast.error(\"xatolik\")\r\n        })\r\n    }\r\n}\r\nexport function editMeasurement(id,data){\r\n    return function (dispatch){\r\n        axios.put(API_PATH+'measurement/edit/'+id,data,tokenHeader).then((res)=>{\r\n            dispatch(getMeasurements())\r\n            toast.success(\"O'zgartirildi\")\r\n        }).catch((error)=>{\r\n            toast.error(\"Xatolik\")\r\n        })\r\n    }\r\n}\r\nexport function deleteMeasurement(id){\r\n    return function (dispatch){\r\n        axios.delete(API_PATH+'measurement/'+id,tokenHeader).then((res)=>{\r\n            dispatch(getMeasurements())\r\n            toast.success(res.data.message)\r\n        }).catch((error)=>{\r\n            toast.error(\"xatolik\")\r\n        })\r\n    }\r\n}\r\nexport function forShowModal(){\r\n    return function (dispatch){\r\n        dispatch({\r\n            type:'measurement/modalHandler'\r\n        })\r\n    }\r\n}\r\nexport function forDeleteModall(){\r\n    return function (dispatch){\r\n        dispatch({\r\n            type:'measurement/forDltModal'\r\n        })\r\n    }\r\n}\r\nexport default measurementSlice.reducer"]},"metadata":{},"sourceType":"module"}