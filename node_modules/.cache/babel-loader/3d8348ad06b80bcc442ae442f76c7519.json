{"ast":null,"code":"var _jsxFileName = \"C:\\\\proektlar\\\\crud\\\\furniture_frontend\\\\src\\\\pages\\\\Product.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { API_PATH, tokenHeader } from \"../component/Constants\";\nimport { toast } from \"react-toastify\";\nimport { Button, Modal, ModalBody, ModalHeader, Table } from \"reactstrap\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport { connect } from \"react-redux\";\nimport { addProduct, deleteProduct, editProduct, forDeleteModal, getProduct, toggleModal } from \"../store/product\";\nimport { getPrType } from \"../store/productType\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Product = ({\n  productType,\n  products,\n  showModal,\n  deleteModal,\n  deleteProduct,\n  editProduct,\n  addProduct,\n  toggleModal,\n  getProduct,\n  forDeleteModal,\n  getPrType\n}) => {\n  _s();\n\n  const [currentClient, setcurrentClient] = useState(undefined);\n  useEffect(() => {\n    getPrType();\n    getProduct();\n  }, []);\n\n  const saveClient = (event, values) => {\n    if (!currentClient) {\n      addProduct(values);\n    } else {\n      editProduct(currentClient.id, values);\n      setcurrentClient(undefined);\n    }\n\n    toggleModal();\n  };\n\n  function deleteClient(value) {\n    deleteProduct(value.id);\n    setcurrentClient(undefined);\n    forDeleteModal();\n  }\n\n  function deleteClientRoad(value) {\n    forDeleteModal();\n    setcurrentClient(value);\n  }\n\n  function editClientRoad(value) {\n    setcurrentClient(value);\n    toggleModal();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: 'btn btn-success ',\n      style: {\n        margin: '20px 0'\n      },\n      onClick: toggleModal,\n      children: \"Qo'shish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModal,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          toggleModal();\n        },\n        children: \"Maxsulot qoshish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(AvForm, {\n          onValidSubmit: saveClient,\n          children: [/*#__PURE__*/_jsxDEV(AvField, {\n            name: \"nameUz\",\n            label: \"NameUz\",\n            required: true,\n            value: currentClient ? currentClient.nameUz : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            name: \"nameRu\",\n            label: \"NameRu\",\n            required: true,\n            value: currentClient ? currentClient.nameRu : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            type: \"select\",\n            name: \"productTypeId\",\n            label: \"Option\",\n            value: currentClient ? currentClient.productTypeId : \"\",\n            helpMessage: \"Idk, this is an example. Deal with it!\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Maxsulot turini tanlang\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), productType.map((value, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: value.id,\n              children: value.nameUz\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 65\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: deleteModal,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          forDeleteModal();\n        },\n        children: \"O'chirishni tasdiqlaysizmi?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => deleteClient(currentClient),\n          children: \"xa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => forDeleteModal(),\n          children: \"Yo'q\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rasm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"NomiUz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"NomiRu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Maxsulot turi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Operations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.nameUz\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.nameRu\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.productType.nameUz\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-warning\",\n                onClick: () => editClientRoad(value),\n                children: \"edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => deleteClientRoad(value),\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Product, \"dXbtFMBL+/j5+ClIr/AU4JQGgTM=\");\n\n_c = Product;\n\nconst mapStateToProps = state => ({\n  products: state.product.product,\n  productType: state.productType.productType,\n  showModal: state.product.showModal,\n  deleteModal: state.product.deleteModal\n});\n\nconst mapDispatchToProps = {\n  getProduct,\n  toggleModal,\n  forDeleteModal,\n  getPrType,\n  addProduct,\n  editProduct,\n  deleteProduct\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["C:/proektlar/crud/furniture_frontend/src/pages/Product.js"],"names":["React","useEffect","useState","axios","API_PATH","tokenHeader","toast","Button","Modal","ModalBody","ModalHeader","Table","AvField","AvForm","connect","addProduct","deleteProduct","editProduct","forDeleteModal","getProduct","toggleModal","getPrType","Product","productType","products","showModal","deleteModal","currentClient","setcurrentClient","undefined","saveClient","event","values","id","deleteClient","value","deleteClientRoad","editClientRoad","margin","nameUz","nameRu","productTypeId","map","index","cursor","mapStateToProps","state","product","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {API_PATH, tokenHeader} from \"../component/Constants\";\r\nimport {toast} from \"react-toastify\";\r\nimport {Button, Modal, ModalBody, ModalHeader, Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {connect} from \"react-redux\";\r\nimport {addProduct, deleteProduct, editProduct, forDeleteModal, getProduct, toggleModal} from \"../store/product\";\r\nimport { getPrType} from \"../store/productType\";\r\n\r\nconst Product = ({productType,products,showModal,deleteModal,\r\n                     deleteProduct, editProduct,addProduct,toggleModal,getProduct,forDeleteModal,getPrType}) => {\r\n    const [currentClient, setcurrentClient] = useState(undefined)\r\n\r\n\r\n    useEffect(() => {\r\n        getPrType()\r\n        getProduct()\r\n    }, [])\r\n\r\n\r\n    const saveClient = (event,values) => {\r\n        if (!currentClient) {\r\n          addProduct(values)\r\n        }else {\r\n          editProduct(currentClient.id,values)\r\n            setcurrentClient(undefined)\r\n        }\r\n        toggleModal()\r\n    }\r\n\r\n    function deleteClient(value) {\r\n      deleteProduct(value.id)\r\n        setcurrentClient(undefined)\r\n        forDeleteModal()\r\n    }\r\n\r\n\r\n    function deleteClientRoad(value) {\r\n        forDeleteModal()\r\n        setcurrentClient(value)\r\n    }\r\n    function editClientRoad(value) {\r\n        setcurrentClient(value)\r\n        toggleModal()\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button className={'btn btn-success '} style={{margin: '20px 0'}} onClick={toggleModal}>Qo'shish</button>\r\n\r\n            <Modal isOpen={showModal}>\r\n                <ModalHeader toggle={() => {\r\n                    toggleModal()\r\n                }}>\r\n                    Maxsulot qoshish\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <AvForm onValidSubmit={saveClient}>\r\n                        {/* With AvField */}\r\n                        {/*<AvField type=\"checkbox\" name=\"active\" label=\"Active\" value=\"false\"/>*/}\r\n                        {/* With AvGroup AvInput and AvFeedback to build your own */}\r\n\r\n                        <AvField name=\"nameUz\" label=\"NameUz\" required  value={currentClient ? currentClient.nameUz : \"\"}/>\r\n                        <AvField name=\"nameRu\" label=\"NameRu\" required value={currentClient ? currentClient.nameRu : \"\"}/>\r\n                        <AvField type=\"select\" name=\"productTypeId\" label=\"Option\" value={currentClient ? currentClient.productTypeId : \"\"}\r\n                                 helpMessage=\"Idk, this is an example. Deal with it!\">\r\n                            <option value=\"\">Maxsulot turini tanlang</option>\r\n                            {productType.map(((value, index) => <option value={value.id}>{value.nameUz}</option>))}\r\n\r\n                                {/*<option>2</option>*/}\r\n                                {/*<option>3</option>*/}\r\n                                {/*<option>4</option>*/}\r\n                                {/*<option>5</option>*/}\r\n                        </AvField>\r\n                        <Button color=\"success\">Save</Button>\r\n                    </AvForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal isOpen={deleteModal}>\r\n                <ModalHeader toggle={() => {\r\n                    forDeleteModal()\r\n                }}>\r\n                    O'chirishni tasdiqlaysizmi?\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Button onClick={() => deleteClient(currentClient)} >xa</Button>\r\n                    <Button onClick={() => forDeleteModal()}>Yo'q</Button>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Table\r\n            >\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        #\r\n                    </th>\r\n                    <th>\r\n                        Rasm\r\n                    </th>\r\n                    <th>\r\n                        NomiUz\r\n                    </th>\r\n                    <th>\r\n                        NomiRu\r\n                    </th>\r\n                    <th>\r\n                        Maxsulot turi\r\n                    </th>\r\n\r\n                    <th>\r\n                        Operations\r\n                    </th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {products.map((value, index) => {\r\n                    return <tr style={{cursor: 'pointer'}}>\r\n                        <td>{index + 1}</td>\r\n                        <td><img src={\"#\"}/></td>\r\n                        <td>{value.nameUz}</td>\r\n                        <td>{value.nameRu}</td>\r\n                        <td>{value.productType.nameUz}</td>\r\n                        <td>\r\n                            <button className={\"btn btn-warning\"} onClick={()=>editClientRoad(value)}>edit</button>\r\n                            <button className={\"btn btn-danger\"} onClick={() => deleteClientRoad(value)}>delete</button>\r\n                        </td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n            \r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps=(state)=>({\r\n    products:state.product.product,\r\n    productType:state.productType.productType,\r\n    showModal:state.product.showModal,\r\n    deleteModal:state.product.deleteModal\r\n})\r\nconst mapDispatchToProps={getProduct,toggleModal,forDeleteModal,getPrType,addProduct,editProduct,deleteProduct}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Product);"]},"metadata":{},"sourceType":"module"}