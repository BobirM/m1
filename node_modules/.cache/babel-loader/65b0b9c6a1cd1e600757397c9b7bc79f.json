{"ast":null,"code":"var _jsxFileName = \"C:\\\\proektlar\\\\crud\\\\furniture_frontend\\\\src\\\\pages\\\\ProductType.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport { Button, Modal, ModalBody, ModalHeader, Table } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { addProductType, deleteProductType, editProductType, forDeleteModal, getPrType, toggle } from \"../store/productType\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductType = ({\n  productType,\n  getPrType,\n  toggle,\n  showModal,\n  deleteModal,\n  forDeleteModal,\n  deleteProductType,\n  addProductType,\n  editProductType\n}) => {\n  _s();\n\n  const [current, setcurrent] = useState(undefined);\n  useEffect(() => {\n    getPrType();\n  }, []);\n\n  const saveClient = (event, values) => {\n    if (!current) {\n      addProductType(values);\n    } else {\n      editProductType(current.id, values);\n      setcurrent(undefined);\n    }\n\n    toggle();\n  };\n\n  function deleteClient(value) {\n    deleteProductType(value.id);\n    setcurrent(undefined);\n    forDeleteModal();\n  }\n\n  function deleteClientRoad(value) {\n    forDeleteModal();\n    setcurrent(value);\n  }\n\n  function editClientRoad(value) {\n    setcurrent(value);\n    toggle();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: 'btn btn-success ',\n      style: {\n        margin: '20px 0'\n      },\n      onClick: toggle,\n      children: \"Qo'shish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModal,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          toggle();\n        },\n        children: \"Maxsulot Turini Qo'shish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(AvForm, {\n          onValidSubmit: saveClient,\n          children: [/*#__PURE__*/_jsxDEV(AvField, {\n            name: \"nameUz\",\n            label: \"NameUz\",\n            required: true,\n            value: current ? current.nameUz : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            name: \"nameRu\",\n            label: \"NameRu\",\n            required: true,\n            value: current ? current.nameRu : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: deleteModal,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          forDeleteModal();\n        },\n        children: \"O'chirishni tasdiqlaysizmi?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => deleteClient(current),\n          children: \"xa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => forDeleteModal(),\n          children: \"Yo'q\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"NomiUz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"NomiRu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Operations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: productType.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.nameUz\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.nameRu\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-warning\",\n                onClick: () => editClientRoad(value),\n                children: \"edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => deleteClientRoad(value),\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductType, \"V8y4MDIMHs4lhWOntmLeDM8K+BY=\");\n\n_c = ProductType;\n\nconst mapStateToProps = state => ({\n  productType: state.productType.productType,\n  showModal: state.productType.showModal,\n  deleteModal: state.productType.forDeleModal\n});\n\nconst mapDispatchToProps = {\n  getPrType,\n  toggle,\n  forDeleteModal,\n  deleteProductType,\n  addProductType,\n  editProductType\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductType);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductType\");","map":{"version":3,"sources":["C:/proektlar/crud/furniture_frontend/src/pages/ProductType.js"],"names":["React","useEffect","useState","AvField","AvForm","Button","Modal","ModalBody","ModalHeader","Table","connect","addProductType","deleteProductType","editProductType","forDeleteModal","getPrType","toggle","ProductType","productType","showModal","deleteModal","current","setcurrent","undefined","saveClient","event","values","id","deleteClient","value","deleteClientRoad","editClientRoad","margin","nameUz","nameRu","map","index","cursor","mapStateToProps","state","forDeleModal","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {Button, Modal, ModalBody, ModalHeader, Table} from \"reactstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addProductType,\r\n    deleteProductType,\r\n    editProductType,\r\n    forDeleteModal,\r\n    getPrType,\r\n    toggle\r\n} from \"../store/productType\";\r\n\r\nconst ProductType = ({productType, getPrType, toggle, showModal,\r\n                         deleteModal, forDeleteModal, deleteProductType, addProductType,editProductType}) => {\r\n\r\n    const [current, setcurrent] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        getPrType()\r\n    }, [])\r\n\r\n\r\n\r\n    const saveClient = (event, values) => {\r\n        if (!current) {\r\n            addProductType(values)\r\n        } else {\r\n            editProductType(current.id,values)\r\n            setcurrent(undefined)\r\n        }\r\n        toggle()\r\n    }\r\n\r\n\r\n    function deleteClient(value) {\r\n        deleteProductType(value.id)\r\n        setcurrent(undefined)\r\n        forDeleteModal()\r\n\r\n    }\r\n\r\n\r\n    function deleteClientRoad(value) {\r\n        forDeleteModal()\r\n        setcurrent(value)\r\n    }\r\n\r\n    function editClientRoad(value) {\r\n        setcurrent(value)\r\n        toggle()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <button className={'btn btn-success '} style={{margin: '20px 0'}} onClick={toggle}>Qo'shish</button>\r\n\r\n            <Modal isOpen={showModal}>\r\n                <ModalHeader toggle={() => {\r\n                    toggle()\r\n                }}>\r\n                    Maxsulot Turini Qo'shish\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <AvForm onValidSubmit={saveClient}>\r\n                        {/* With AvField */}\r\n                        {/*<AvField type=\"checkbox\" name=\"active\" label=\"Active\" value=\"false\"/>*/}\r\n                        {/* With AvGroup AvInput and AvFeedback to build your own */}\r\n                        {/*<AvField type=\"select\" name=\"select\" label=\"Option\"*/}\r\n                        {/*         helpMessage=\"Idk, this is an example. Deal with it!\">*/}\r\n                        {/*    <option>1</option>*/}\r\n                        {/*    <option>2</option>*/}\r\n                        {/*    <option>3</option>*/}\r\n                        {/*    <option>4</option>*/}\r\n                        {/*    <option>5</option>*/}\r\n                        {/*</AvField>*/}\r\n                        <AvField name=\"nameUz\" label=\"NameUz\" required\r\n                                 value={current ? current.nameUz : \"\"}/>\r\n                        <AvField name=\"nameRu\" label=\"NameRu\" required\r\n                                 value={current ? current.nameRu : \"\"}/>\r\n                        <Button color=\"success\">Save</Button>\r\n                    </AvForm>\r\n                    \r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal isOpen={deleteModal}>\r\n                <ModalHeader toggle={() => {\r\n                    forDeleteModal()\r\n                }}>\r\n                    O'chirishni tasdiqlaysizmi?\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Button onClick={() => deleteClient(current)}>xa</Button>\r\n                    <Button onClick={() => forDeleteModal()}>Yo'q</Button>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Table\r\n            >\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        #\r\n                    </th>\r\n                    <th>\r\n                        NomiUz\r\n                    </th>\r\n                    <th>\r\n                        NomiRu\r\n                    </th>\r\n                    <th>\r\n                        Operations\r\n                    </th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {productType.map((value, index) => {\r\n                    return <tr style={{cursor: 'pointer'}}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{value.nameUz}</td>\r\n                        <td>{value.nameRu}</td>\r\n                        <td>\r\n                            <button className={\"btn btn-warning\"} onClick={() => editClientRoad(value)}>edit</button>\r\n                            <button className={\"btn btn-danger\"} onClick={() => deleteClientRoad(value)}>delete</button>\r\n                        </td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    productType: state.productType.productType,\r\n    showModal: state.productType.showModal,\r\n    deleteModal: state.productType.forDeleModal\r\n})\r\nconst mapDispatchToProps = {getPrType, toggle, forDeleteModal, deleteProductType, addProductType,editProductType}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductType);"]},"metadata":{},"sourceType":"module"}