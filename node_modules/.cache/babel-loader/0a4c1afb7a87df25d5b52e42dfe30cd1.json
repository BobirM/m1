{"ast":null,"code":"var _jsxFileName = \"C:\\\\proektlar\\\\crud\\\\furniture_frontend\\\\src\\\\pages\\\\Measurement.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Modal, ModalBody, ModalHeader, Table } from \"reactstrap\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport { connect } from \"react-redux\";\nimport { addMeasurement, deleteMeasurement, editMeasurement, forDeleteModall, forShowModal, getMeasurements } from \"../store/measurement\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Measurement = ({\n  deleteModal,\n  measurements,\n  showModal,\n  getMeasurements,\n  forShowModal,\n  forDeleteModall,\n  addMeasurement,\n  deleteMeasurement,\n  editMeasurement\n}) => {\n  _s();\n\n  const [currentClient, setcurrentClient] = useState(undefined);\n  useEffect(() => {\n    getMeasurements();\n  }, []);\n\n  const saveClient = (event, values) => {\n    if (!currentClient) {\n      addMeasurement(values);\n    } else {\n      editMeasurement(currentClient.id, values);\n      setcurrentClient(undefined);\n    }\n\n    forShowModal();\n  };\n\n  function deleteClient(value) {\n    deleteMeasurement(value.id);\n    setcurrentClient(undefined);\n    forDeleteModall();\n  }\n\n  function deleteClientRoad(value) {\n    forDeleteModall();\n    setcurrentClient(value);\n  }\n\n  function editClientRoad(value) {\n    setcurrentClient(value);\n    forShowModal();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: 'btn btn-warning ',\n      style: {\n        margin: '20px 0'\n      },\n      onClick: forShowModal,\n      children: \"Qo'shish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModal,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          forShowModal();\n        },\n        children: \"O'lchov Birligi Qo'shish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(AvForm, {\n          onValidSubmit: saveClient,\n          children: [/*#__PURE__*/_jsxDEV(AvField, {\n            name: \"nameUz\",\n            label: \"NameUz\",\n            required: true,\n            value: currentClient ? currentClient.nameUz : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            name: \"nameRu\",\n            label: \"NameRu\",\n            required: true,\n            value: currentClient ? currentClient.nameRu : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: deleteModal,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          forDeleteModall();\n        },\n        children: \"O'chirishni tasdiqlaysizmi?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => deleteClient(currentClient),\n          children: \"xa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => forDeleteModall(),\n          children: \"Yo'q\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"NomiUz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"NomiRu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Operations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: measurements.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.nameUz\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.nameRu\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-warning\",\n                onClick: () => editClientRoad(value),\n                children: \"edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => deleteClientRoad(value),\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Measurement, \"dXbtFMBL+/j5+ClIr/AU4JQGgTM=\");\n\n_c = Measurement;\n\nconst mapStateToProps = state => ({\n  measurements: state.measurement.measurement,\n  showModal: state.measurement.showModal,\n  deleteModal: state.measurement.forDeleteModal\n});\n\nconst mapDispatchToProps = {\n  getMeasurements,\n  forShowModal,\n  forDeleteModall,\n  deleteMeasurement,\n  addMeasurement,\n  editMeasurement\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Measurement);\n\nvar _c;\n\n$RefreshReg$(_c, \"Measurement\");","map":{"version":3,"sources":["C:/proektlar/crud/furniture_frontend/src/pages/Measurement.js"],"names":["React","useEffect","useState","Button","Modal","ModalBody","ModalHeader","Table","AvField","AvForm","connect","addMeasurement","deleteMeasurement","editMeasurement","forDeleteModall","forShowModal","getMeasurements","Measurement","deleteModal","measurements","showModal","currentClient","setcurrentClient","undefined","saveClient","event","values","id","deleteClient","value","deleteClientRoad","editClientRoad","margin","nameUz","nameRu","map","index","cursor","mapStateToProps","state","measurement","forDeleteModal","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Button, Modal, ModalBody, ModalHeader, Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addMeasurement,\r\n    deleteMeasurement,\r\n    editMeasurement,\r\n    forDeleteModall,\r\n    forShowModal,\r\n    getMeasurements\r\n} from \"../store/measurement\";\r\n\r\nconst Measurement = ({deleteModal, measurements, showModal, getMeasurements, forShowModal,\r\n                         forDeleteModall, addMeasurement, deleteMeasurement, editMeasurement\r\n                     }) => {\r\n\r\n\r\n    const [currentClient, setcurrentClient] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        getMeasurements()\r\n    }, [])\r\n\r\n    const saveClient = (event, values) => {\r\n        if (!currentClient) {\r\n            addMeasurement(values)\r\n        } else {\r\n            editMeasurement(currentClient.id, values)\r\n            setcurrentClient(undefined)\r\n        }\r\n        forShowModal()\r\n    }\r\n\r\n    function deleteClient(value) {\r\n        deleteMeasurement(value.id)\r\n        setcurrentClient(undefined)\r\n        forDeleteModall()\r\n    }\r\n\r\n    function deleteClientRoad(value) {\r\n        forDeleteModall()\r\n        setcurrentClient(value)\r\n    }\r\n\r\n    function editClientRoad(value) {\r\n        setcurrentClient(value)\r\n        forShowModal()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <button className={'btn btn-warning '} style={{margin: '20px 0'}} onClick={forShowModal}>Qo'shish</button>\r\n\r\n            <Modal isOpen={showModal}>\r\n                <ModalHeader toggle={() => {\r\n                    forShowModal()\r\n                }}>\r\n                    O'lchov Birligi Qo'shish\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <AvForm onValidSubmit={saveClient}>\r\n                        <AvField name=\"nameUz\" label=\"NameUz\" required\r\n                                 value={currentClient ? currentClient.nameUz : \"\"}/>\r\n                        <AvField name=\"nameRu\" label=\"NameRu\" required\r\n                                 value={currentClient ? currentClient.nameRu : \"\"}/>\r\n                        <Button color=\"success\">Save</Button>\r\n                    </AvForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal isOpen={deleteModal}>\r\n                <ModalHeader toggle={() => {\r\n                    forDeleteModall()\r\n                }}>\r\n                    O'chirishni tasdiqlaysizmi?\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Button onClick={() => deleteClient(currentClient)}>xa</Button>\r\n                    <Button onClick={() => forDeleteModall()}>Yo'q</Button>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Table\r\n            >\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        #\r\n                    </th>\r\n                    <th>\r\n                        NomiUz\r\n                    </th>\r\n                    <th>\r\n                        NomiRu\r\n                    </th>\r\n                    <th>\r\n                        Operations\r\n                    </th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {measurements.map((value, index) => {\r\n                    return <tr style={{cursor: 'pointer'}}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{value.nameUz}</td>\r\n                        <td>{value.nameRu}</td>\r\n                        <td>\r\n                            <button className={\"btn btn-warning\"} onClick={() => editClientRoad(value)}>edit</button>\r\n                            <button className={\"btn btn-danger\"} onClick={() => deleteClientRoad(value)}>delete</button>\r\n                        </td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    measurements: state.measurement.measurement,\r\n    showModal: state.measurement.showModal,\r\n    deleteModal: state.measurement.forDeleteModal\r\n})\r\nconst mapDispatchToProps = {\r\n    getMeasurements,\r\n    forShowModal,\r\n    forDeleteModall,\r\n    deleteMeasurement,\r\n    addMeasurement,\r\n    editMeasurement\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Measurement);"]},"metadata":{},"sourceType":"module"}