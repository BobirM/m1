{"ast":null,"code":"var _jsxFileName = \"C:\\\\proektlar\\\\crud\\\\furniture_frontend\\\\src\\\\pages\\\\OutputMaterial.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { API_PATH, tokenHeader } from \"../component/Constants\";\nimport { toast } from \"react-toastify\";\nimport { Button, Modal, ModalBody, ModalHeader, Table } from \"reactstrap\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport { connect } from \"react-redux\";\nimport { addOutputMaterial, deleteOutputMaterial, editOutputMaterial, forDeleteModal, getOutputMaterial, modalToggle } from \"../store/outputMaterial\";\nimport { getMaterial } from \"../store/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OutputMaterial = ({\n  outMat,\n  showModal,\n  deleteModal,\n  addOutputMaterial,\n  material,\n  modalToggle,\n  deleteOutputMaterial,\n  forDeleteModal,\n  editOutputMaterial,\n  getOutputMaterial,\n  getMaterial\n}) => {\n  _s();\n\n  const [currentClient, setcurrentClient] = useState(undefined);\n  useEffect(() => {\n    getMaterial();\n    getOutputMaterial();\n  }, []);\n\n  const saveClient = (event, values) => {\n    if (!currentClient) {\n      addOutputMaterial(values);\n    } else {\n      editOutputMaterial(currentClient.id, values);\n      setcurrentClient(undefined);\n    }\n\n    modalToggle();\n  };\n\n  function deleteClient(value) {\n    deleteOutputMaterial(value.id);\n    setcurrentClient(undefined);\n    forDeleteModal();\n  }\n\n  function deleteClientRoad(value) {\n    forDeleteModal();\n    setcurrentClient(value);\n  }\n\n  function editClientRoad(value) {\n    setcurrentClient(value);\n    modalToggle();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: 'btn btn-success ',\n      style: {\n        margin: '20px 0'\n      },\n      onClick: modalToggle,\n      children: \"Qo'shish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModal,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          modalToggle();\n        },\n        children: \"Ombordagi Xomashyodan Chiqim Qilish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(AvForm, {\n          onValidSubmit: saveClient,\n          children: [/*#__PURE__*/_jsxDEV(AvField, {\n            type: \"select\",\n            name: \"materialId\",\n            label: \"Option\",\n            helpMessage: \"Idk, this is an example. Deal with it!\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Xomashyo turini tanlang\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), material.map((value, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: value.id,\n                children: value.nameUZ\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            name: \"amount\",\n            label: \"Maxsulot miqdori\",\n            required: true,\n            value: currentClient ? currentClient.amount : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            name: \"comment\",\n            label: \"Izoh\",\n            required: true,\n            value: currentClient ? currentClient.description : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: deleteModal,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          forDeleteModal();\n        },\n        children: \"O'chirishni tasdiqlaysizmi?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => deleteClient(currentClient),\n          children: \"xa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => forDeleteModal(),\n          children: \"Yo'q\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nomi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Miqdori\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"O'lchov birligi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sana\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Izoh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amallar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: outMat.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.material.code + ' ' + value.material.nameUZ\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.material.measurement.nameUz\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-warning\",\n                onClick: () => editClientRoad(value),\n                children: \"edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => deleteClientRoad(value),\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OutputMaterial, \"dXbtFMBL+/j5+ClIr/AU4JQGgTM=\");\n\n_c = OutputMaterial;\n\nconst mapStateToProps = state => ({\n  outMat: state.outputMaterial.outputMaterial,\n  showModal: state.outputMaterial.showModal,\n  deleteModal: state.outputMaterial.deleteModal,\n  material: state.material.material\n});\n\nconst mapDispatchToProps = {\n  getOutputMaterial,\n  getMaterial,\n  addOutputMaterial,\n  editOutputMaterial,\n  deleteOutputMaterial,\n  modalToggle,\n  forDeleteModal\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(OutputMaterial);\n\nvar _c;\n\n$RefreshReg$(_c, \"OutputMaterial\");","map":{"version":3,"sources":["C:/proektlar/crud/furniture_frontend/src/pages/OutputMaterial.js"],"names":["React","useEffect","useState","axios","API_PATH","tokenHeader","toast","Button","Modal","ModalBody","ModalHeader","Table","AvField","AvForm","connect","addOutputMaterial","deleteOutputMaterial","editOutputMaterial","forDeleteModal","getOutputMaterial","modalToggle","getMaterial","OutputMaterial","outMat","showModal","deleteModal","material","currentClient","setcurrentClient","undefined","saveClient","event","values","id","deleteClient","value","deleteClientRoad","editClientRoad","margin","map","index","nameUZ","amount","description","cursor","code","measurement","nameUz","date","comment","mapStateToProps","state","outputMaterial","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {API_PATH, tokenHeader} from \"../component/Constants\";\r\nimport {toast} from \"react-toastify\";\r\nimport {Button, Modal, ModalBody, ModalHeader, Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addOutputMaterial,\r\n    deleteOutputMaterial,\r\n    editOutputMaterial, forDeleteModal,\r\n    getOutputMaterial,\r\n    modalToggle\r\n} from \"../store/outputMaterial\";\r\nimport {getMaterial} from \"../store/material\";\r\n\r\nconst OutputMaterial = ({outMat,showModal,deleteModal,addOutputMaterial,material,modalToggle,deleteOutputMaterial,forDeleteModal,editOutputMaterial,getOutputMaterial,getMaterial}) => {\r\n    const [currentClient, setcurrentClient] = useState(undefined)\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getMaterial()\r\n        getOutputMaterial()\r\n    }, [])\r\n\r\n\r\n    const saveClient = (event, values) => {\r\n        if (!currentClient) {\r\n           addOutputMaterial(values)\r\n        } else {\r\n           editOutputMaterial(currentClient.id,values)\r\n            setcurrentClient(undefined)\r\n        }\r\n        modalToggle()\r\n    }\r\n\r\n    function deleteClient(value) {\r\n       deleteOutputMaterial(value.id)\r\n        setcurrentClient(undefined)\r\n        forDeleteModal()\r\n    }\r\n\r\n\r\n\r\n    function deleteClientRoad(value) {\r\n        forDeleteModal()\r\n        setcurrentClient(value)\r\n    }\r\n\r\n    function editClientRoad(value) {\r\n        setcurrentClient(value)\r\n        modalToggle()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <button className={'btn btn-success '} style={{margin: '20px 0'}} onClick={modalToggle}>Qo'shish</button>\r\n\r\n            <Modal isOpen={showModal}>\r\n                <ModalHeader toggle={() => {\r\n                    modalToggle()\r\n                }}>\r\n                   Ombordagi Xomashyodan Chiqim Qilish\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <AvForm onValidSubmit={saveClient}>\r\n                        {/* With AvField */}\r\n                        {/*<AvField type=\"checkbox\" name=\"active\" label=\"Active\" value=\"false\"/>*/}\r\n                        {/* With AvGroup AvInput and AvFeedback to build your own */}\r\n\r\n                        <AvField type=\"select\" name=\"materialId\" label=\"Option\"\r\n                                 helpMessage=\"Idk, this is an example. Deal with it!\">\r\n                            <option value=\"\">Xomashyo turini tanlang</option>\r\n                            {material.map(((value, index) => {\r\n                                return <option value={value.id}>{value.nameUZ}</option>\r\n                            }))}\r\n                        </AvField>\r\n                        <AvField name=\"amount\" label=\"Maxsulot miqdori\" required value={currentClient ? currentClient.amount : \"\"}/>\r\n                        <AvField name=\"comment\" label=\"Izoh\" required value={currentClient ? currentClient.description : \"\"}/>\r\n                        <Button color=\"success\">Save</Button>\r\n                    </AvForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal isOpen={deleteModal}>\r\n                <ModalHeader toggle={() => {\r\n                    forDeleteModal()\r\n                }}>\r\n                    O'chirishni tasdiqlaysizmi?\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Button onClick={() => deleteClient(currentClient)}>xa</Button>\r\n                    <Button onClick={() => forDeleteModal()}>Yo'q</Button>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Table\r\n            >\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        #\r\n                    </th>\r\n                    <th>\r\n                        Nomi\r\n                    </th>\r\n                    <th>\r\n                        Miqdori\r\n                    </th>\r\n                    <th>\r\n                        O'lchov birligi\r\n                    </th>\r\n\r\n                    <th>\r\n                        Sana\r\n                    </th>\r\n                    <th>\r\n                        Izoh\r\n                    </th>\r\n                    <th>\r\n                        Amallar\r\n                    </th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {outMat.map((value, index) => {\r\n                    return <tr style={{cursor: 'pointer'}}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{value.material.code+' '+value.material.nameUZ}</td>\r\n                        <td>{value.amount}</td>\r\n                        <td>{value.material.measurement.nameUz}</td>\r\n                        <td>{value.date}</td>\r\n                        <td>{value.comment}</td>\r\n                        <td>\r\n                            <button className={\"btn btn-warning\"} onClick={() => editClientRoad(value)}>edit</button>\r\n                            <button className={\"btn btn-danger\"} onClick={() => deleteClientRoad(value)}>delete</button>\r\n                        </td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps=(state)=>({\r\n    outMat:state.outputMaterial.outputMaterial,\r\n    showModal:state.outputMaterial.showModal,\r\n    deleteModal:state.outputMaterial.deleteModal,\r\n    material:state.material.material\r\n\r\n})\r\nconst mapDispatchToProps={getOutputMaterial,getMaterial,addOutputMaterial,editOutputMaterial,deleteOutputMaterial,modalToggle,forDeleteModal}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(OutputMaterial);"]},"metadata":{},"sourceType":"module"}