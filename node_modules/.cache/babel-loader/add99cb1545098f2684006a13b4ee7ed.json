{"ast":null,"code":"var _jsxFileName = \"C:\\\\proektlar\\\\crud\\\\furniture_frontend\\\\src\\\\pages\\\\InputMaterial.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Modal, ModalBody, ModalHeader, Table } from \"reactstrap\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport { connect } from \"react-redux\";\nimport { addInputMaterial, deleteInputMaterial, editInputMaterial, forDeleteModal, getInputMaterial, modalToggle } from \"../store/inputMaterial\";\nimport { getSuplier } from \"../store/suplier\";\nimport { getMaterial } from \"../store/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputMaterial = ({\n  inMaterial,\n  showModal,\n  deleteModal,\n  suplier,\n  material,\n  getInputMaterial,\n  getSuplier,\n  modalToggle,\n  forDeleteModal,\n  deleteInputMaterial,\n  editInputMaterial,\n  getMaterial,\n  addInputMaterial\n}) => {\n  _s();\n\n  const [currentClient, setcurrentClient] = useState(undefined);\n  useEffect(() => {\n    getMaterial();\n    getSuplier();\n    getInputMaterial();\n  }, []);\n\n  const saveClient = (event, values) => {\n    if (!currentClient) {\n      addInputMaterial(values);\n    } else {\n      editInputMaterial(currentClient.id, values);\n      setcurrentClient(undefined);\n    }\n\n    modalToggle();\n  };\n\n  function deleteClient(value) {\n    deleteInputMaterial(value.id);\n    setcurrentClient(undefined);\n    forDeleteModal();\n  }\n\n  function deleteClientRoad(value) {\n    forDeleteModal();\n    setcurrentClient(value);\n  }\n\n  function editClientRoad(value) {\n    setcurrentClient(value);\n    modalToggle();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: 'btn btn-success ',\n      style: {\n        margin: '20px 0'\n      },\n      onClick: modalToggle,\n      children: \"Qo'shish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModal,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          modalToggle();\n        },\n        children: \"Omborga Xomashyo qo'shish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(AvForm, {\n          onValidSubmit: saveClient,\n          children: [/*#__PURE__*/_jsxDEV(AvField, {\n            type: \"select\",\n            name: \"materialId\",\n            label: \"Option\",\n            helpMessage: \"Idk, this is an example. Deal with it!\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Xomashyo turini tanlang\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), material.map((value, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: value.id,\n                children: value.nameUZ\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            type: \"select\",\n            name: \"supplierId\",\n            label: \"Option\",\n            helpMessage: \"Idk, this is an example. Deal with it!\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Taminotchini tanlang\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), suplier.map((value, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: value.id,\n                children: value.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            name: \"amount\",\n            label: \"Maxsulot miqdori\",\n            required: true,\n            value: currentClient ? currentClient.amount : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            name: \"price\",\n            label: \"Narxi\",\n            required: true,\n            value: currentClient ? currentClient.price : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: deleteModal,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          forDeleteModal();\n        },\n        children: \"O'chirishni tasdiqlaysizmi?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => deleteClient(currentClient),\n          children: \"xa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => forDeleteModal(),\n          children: \"Yo'q\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nomi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Miqdori\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"O'lchov birligi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Narxi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Jami\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sana\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Taminotchi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amallar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: inMaterial.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.material.code + ' ' + value.material.nameUZ\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.material.measurement.nameUz\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.price + ' $'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.price * value.amount + ' $'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.supplier.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-warning\",\n                onClick: () => editClientRoad(value),\n                children: \"edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => deleteClientRoad(value),\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputMaterial, \"dXbtFMBL+/j5+ClIr/AU4JQGgTM=\");\n\n_c = InputMaterial;\n\nconst mapStateToProps = state => ({\n  inMaterial: state.inputMaterial.inputMaterial,\n  deleteModal: state.inputMaterial.deleteModal,\n  showModal: state.inputMaterial.showModal,\n  suplier: state.suplier.suplier,\n  material: state.material.material\n});\n\nconst mapDispatchToProps = {\n  getInputMaterial,\n  getSuplier,\n  getMaterial,\n  deleteInputMaterial,\n  modalToggle,\n  forDeleteModal,\n  addInputMaterial,\n  editInputMaterial\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(InputMaterial);\n\nvar _c;\n\n$RefreshReg$(_c, \"InputMaterial\");","map":{"version":3,"sources":["C:/proektlar/crud/furniture_frontend/src/pages/InputMaterial.js"],"names":["React","useEffect","useState","Button","Modal","ModalBody","ModalHeader","Table","AvField","AvForm","connect","addInputMaterial","deleteInputMaterial","editInputMaterial","forDeleteModal","getInputMaterial","modalToggle","getSuplier","getMaterial","InputMaterial","inMaterial","showModal","deleteModal","suplier","material","currentClient","setcurrentClient","undefined","saveClient","event","values","id","deleteClient","value","deleteClientRoad","editClientRoad","margin","map","index","nameUZ","name","amount","price","cursor","code","measurement","nameUz","date","supplier","mapStateToProps","state","inputMaterial","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Button, Modal, ModalBody, ModalHeader, Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addInputMaterial,\r\n    deleteInputMaterial,\r\n    editInputMaterial, forDeleteModal,\r\n    getInputMaterial,\r\n    modalToggle\r\n} from \"../store/inputMaterial\";\r\nimport {getSuplier} from \"../store/suplier\";\r\nimport {getMaterial} from \"../store/material\";\r\n\r\nconst InputMaterial = ({inMaterial, showModal, deleteModal, suplier, material, getInputMaterial,\r\n                           getSuplier, modalToggle, forDeleteModal, deleteInputMaterial, editInputMaterial, getMaterial, addInputMaterial\r\n                       }) => {\r\n\r\n    const [currentClient, setcurrentClient] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        getMaterial()\r\n        getSuplier()\r\n        getInputMaterial()\r\n    }, [])\r\n\r\n\r\n    const saveClient = (event, values) => {\r\n        if (!currentClient) {\r\n            addInputMaterial(values)\r\n        } else {\r\n            editInputMaterial(currentClient.id, values)\r\n            setcurrentClient(undefined)\r\n        }\r\n        modalToggle()\r\n    }\r\n\r\n    function deleteClient(value) {\r\n        deleteInputMaterial(value.id)\r\n        setcurrentClient(undefined)\r\n        forDeleteModal()\r\n    }\r\n\r\n\r\n    function deleteClientRoad(value) {\r\n        forDeleteModal()\r\n        setcurrentClient(value)\r\n    }\r\n\r\n    function editClientRoad(value) {\r\n        setcurrentClient(value)\r\n        modalToggle()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <button className={'btn btn-success '} style={{margin: '20px 0'}} onClick={modalToggle}>Qo'shish</button>\r\n\r\n            <Modal isOpen={showModal}>\r\n                <ModalHeader toggle={() => {\r\n                    modalToggle()\r\n                }}>\r\n                    Omborga Xomashyo qo'shish\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <AvForm onValidSubmit={saveClient}>\r\n                        {/* With AvField */}\r\n                        {/*<AvField type=\"checkbox\" name=\"active\" label=\"Active\" value=\"false\"/>*/}\r\n                        {/* With AvGroup AvInput and AvFeedback to build your own */}\r\n\r\n                        <AvField type=\"select\" name=\"materialId\" label=\"Option\"\r\n                                 helpMessage=\"Idk, this is an example. Deal with it!\">\r\n                            <option value=\"\">Xomashyo turini tanlang</option>\r\n                            {material.map(((value, index) => {\r\n                                return <option value={value.id}>{value.nameUZ}</option>\r\n                            }))}\r\n                        </AvField>\r\n                        <AvField type=\"select\" name=\"supplierId\" label=\"Option\"\r\n                                 helpMessage=\"Idk, this is an example. Deal with it!\">\r\n                            <option value=\"\">Taminotchini tanlang</option>\r\n                            {suplier.map(((value, index) => {\r\n                                return <option value={value.id}>{value.name}</option>\r\n                            }))}\r\n                        </AvField>\r\n                        <AvField name=\"amount\" label=\"Maxsulot miqdori\" required\r\n                                 value={currentClient ? currentClient.amount : \"\"}/>\r\n                        <AvField name=\"price\" label=\"Narxi\" required\r\n                                 value={currentClient ? currentClient.price : \"\"}/>\r\n                        <Button color=\"success\">Save</Button>\r\n                    </AvForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal isOpen={deleteModal}>\r\n                <ModalHeader toggle={() => {\r\n                    forDeleteModal()\r\n                }}>\r\n                    O'chirishni tasdiqlaysizmi?\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Button onClick={() => deleteClient(currentClient)}>xa</Button>\r\n                    <Button onClick={() => forDeleteModal()}>Yo'q</Button>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Table\r\n            >\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        #\r\n                    </th>\r\n                    <th>\r\n                        Nomi\r\n                    </th>\r\n                    <th>\r\n                        Miqdori\r\n                    </th>\r\n                    <th>\r\n                        O'lchov birligi\r\n                    </th>\r\n                    <th>\r\n                        Narxi\r\n                    </th>\r\n                    <th>\r\n                        Jami\r\n                    </th>\r\n                    <th>\r\n                        Sana\r\n                    </th>\r\n                    <th>\r\n                        Taminotchi\r\n                    </th>\r\n                    <th>\r\n                        Amallar\r\n                    </th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {inMaterial.map((value, index) => {\r\n                    return <tr style={{cursor: 'pointer'}}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{value.material.code + ' ' + value.material.nameUZ}</td>\r\n                        <td>{value.amount}</td>\r\n                        <td>{value.material.measurement.nameUz}</td>\r\n                        <td>{value.price + ' $'}</td>\r\n                        <td>{value.price * value.amount + ' $'}</td>\r\n                        <td>{value.date}</td>\r\n                        <td>{value.supplier.name}</td>\r\n                        <td>\r\n                            <button className={\"btn btn-warning\"} onClick={() => editClientRoad(value)}>edit</button>\r\n                            <button className={\"btn btn-danger\"} onClick={() => deleteClientRoad(value)}>delete</button>\r\n                        </td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    inMaterial: state.inputMaterial.inputMaterial,\r\n    deleteModal: state.inputMaterial.deleteModal,\r\n    showModal: state.inputMaterial.showModal,\r\n    suplier: state.suplier.suplier,\r\n    material: state.material.material\r\n})\r\nconst mapDispatchToProps = {\r\n    getInputMaterial,\r\n    getSuplier,\r\n    getMaterial,\r\n    deleteInputMaterial,\r\n    modalToggle,\r\n    forDeleteModal,\r\n    addInputMaterial,\r\n    editInputMaterial\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputMaterial);"]},"metadata":{},"sourceType":"module"}