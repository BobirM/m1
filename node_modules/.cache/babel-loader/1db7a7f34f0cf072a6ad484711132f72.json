{"ast":null,"code":"var _jsxFileName = \"C:\\\\proektlar\\\\crud\\\\furniture_frontend\\\\src\\\\pages\\\\InputProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { API_PATH, tokenHeader } from \"../component/Constants\";\nimport { toast } from \"react-toastify\";\nimport { Button, Modal, ModalBody, ModalHeader, Table } from \"reactstrap\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport { connect } from \"react-redux\";\nimport { addInputProduct, deleteInputProduct, editInputProduct, forDeleteModal, getInputProduct, modalToggle } from \"../store/inputProduct\";\nimport { getProduct } from \"../store/product\";\nimport { getPrType } from \"../store/productType\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputProduct = ({\n  inputProduct,\n  product,\n  productType,\n  showModal,\n  deleteModal,\n  getPrType,\n  getProduct,\n  getInputProduct,\n  modalToggle,\n  forDeleteModal,\n  deleteInputProduct,\n  editInputProduct,\n  addInputProduct\n}) => {\n  _s();\n\n  const [currentClient, setcurrentClient] = useState(undefined);\n  useEffect(() => {\n    getInputProduct();\n    getProduct();\n    getPrType();\n  }, []);\n\n  const saveClient = (event, values) => {\n    if (!currentClient) {\n      addInputProduct(values);\n    } else {\n      editInputProduct(currentClient.id, values);\n      setcurrentClient(undefined);\n    }\n\n    modalToggle();\n  };\n\n  function deleteClient(value) {\n    deleteModal(value.id);\n    setcurrentClient(undefined);\n    forDeleteModal();\n  }\n\n  function deleteClientRoad(value) {\n    forDeleteModal();\n    setcurrentClient(value);\n  }\n\n  function editClientRoad(value) {\n    setcurrentClient(value);\n    modalToggle();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: 'btn btn-success ',\n      style: {\n        margin: '20px 0'\n      },\n      onClick: modalToggle,\n      children: \"Qo'shish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModal,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          modalToggle();\n        },\n        children: \"Omborga Tayyor Maxsulot Kirimi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(AvForm, {\n          onValidSubmit: saveClient,\n          children: [/*#__PURE__*/_jsxDEV(AvField, {\n            type: \"select\",\n            name: \"productTypeId\",\n            label: \"Option\",\n            helpMessage: \"Idk, this is an example. Deal with it!\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Maxsulot turini tanlang\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), productType.map((value, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: value.id,\n                children: value.nameUz\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            type: \"select\",\n            name: \"productId\",\n            label: \"Option\",\n            helpMessage: \"Idk, this is an example. Deal with it!\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Maxsulot Nomini Tanlang\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), product.map((value, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: value.id,\n                children: value.nameUz\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            name: \"amount\",\n            label: \"Maxsulot miqdori\",\n            required: true,\n            value: currentClient ? currentClient.amount : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            name: \"price\",\n            label: \"Narxi\",\n            required: true,\n            value: currentClient ? currentClient.price : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: deleteModal,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          forDeleteModal();\n        },\n        children: \"O'chirishni tasdiqlaysizmi?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => deleteClient(currentClient),\n          children: \"xa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => forDeleteModal(),\n          children: \"Yo'q\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nomi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Maxsulot turi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Miqdori\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Narxi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Umumiy summa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sana\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amallar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: inputProduct.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.product.nameUz\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.productType.nameUz\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.price + ' $'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.price * value.amount + ' $'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.inputDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-warning\",\n                onClick: () => editClientRoad(value),\n                children: \"edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => deleteClientRoad(value),\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputProduct, \"dXbtFMBL+/j5+ClIr/AU4JQGgTM=\");\n\n_c = InputProduct;\n\nconst mapStateToProps = state => ({\n  inputProduct: state.inputProduct.inputProduct,\n  showModal: state.inputProduct.showModal,\n  deleteModal: state.inputProduct.deleteModal,\n  product: state.product.product,\n  productType: state.productType.productType\n});\n\nconst mapDispatchToProps = {\n  getInputProduct,\n  getProduct,\n  getPrType,\n  modalToggle,\n  forDeleteModal,\n  addInputProduct,\n  editInputProduct,\n  deleteInputProduct\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(InputProduct);\n\nvar _c;\n\n$RefreshReg$(_c, \"InputProduct\");","map":{"version":3,"sources":["C:/proektlar/crud/furniture_frontend/src/pages/InputProduct.js"],"names":["React","useEffect","useState","axios","API_PATH","tokenHeader","toast","Button","Modal","ModalBody","ModalHeader","Table","AvField","AvForm","connect","addInputProduct","deleteInputProduct","editInputProduct","forDeleteModal","getInputProduct","modalToggle","getProduct","getPrType","InputProduct","inputProduct","product","productType","showModal","deleteModal","currentClient","setcurrentClient","undefined","saveClient","event","values","id","deleteClient","value","deleteClientRoad","editClientRoad","margin","map","index","nameUz","amount","price","cursor","inputDate","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {API_PATH, tokenHeader} from \"../component/Constants\";\r\nimport {toast} from \"react-toastify\";\r\nimport {Button, Modal, ModalBody, ModalHeader, Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addInputProduct,\r\n    deleteInputProduct,\r\n    editInputProduct,\r\n    forDeleteModal,\r\n    getInputProduct,\r\n    modalToggle\r\n} from \"../store/inputProduct\";\r\nimport {getProduct} from \"../store/product\";\r\nimport {getPrType} from \"../store/productType\";\r\n\r\nconst InputProduct = ({inputProduct,product,productType,showModal,deleteModal,getPrType,getProduct,getInputProduct,modalToggle,forDeleteModal,deleteInputProduct,editInputProduct,addInputProduct}) => {\r\n\r\n    const [currentClient, setcurrentClient] = useState(undefined)\r\n\r\n\r\n    useEffect(() => {\r\n        getInputProduct()\r\n        getProduct()\r\n        getPrType()\r\n    }, [])\r\n\r\n\r\n    const saveClient = (event, values) => {\r\n        if (!currentClient) {\r\n            addInputProduct(values)\r\n        } else {\r\n            editInputProduct(currentClient.id,values)\r\n            setcurrentClient(undefined)\r\n        }\r\n        modalToggle()\r\n    }\r\n\r\n    function deleteClient(value) {\r\n      deleteModal(value.id)\r\n        setcurrentClient(undefined)\r\n        forDeleteModal()\r\n    }\r\n\r\n\r\n\r\n    function deleteClientRoad(value) {\r\n        forDeleteModal()\r\n        setcurrentClient(value)\r\n    }\r\n\r\n    function editClientRoad(value) {\r\n        setcurrentClient(value)\r\n        modalToggle()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={\"container\"}>\r\n            <button className={'btn btn-success '} style={{margin: '20px 0'}} onClick={modalToggle}>Qo'shish</button>\r\n\r\n            <Modal isOpen={showModal}>\r\n                <ModalHeader toggle={() => {\r\n                    modalToggle()\r\n                }}>\r\n                   Omborga Tayyor Maxsulot Kirimi\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <AvForm onValidSubmit={saveClient}>\r\n                        {/* With AvField */}\r\n                        {/*<AvField type=\"checkbox\" name=\"active\" label=\"Active\" value=\"false\"/>*/}\r\n                        {/* With AvGroup AvInput and AvFeedback to build your own */}\r\n\r\n                        <AvField type=\"select\" name=\"productTypeId\" label=\"Option\"\r\n                                 helpMessage=\"Idk, this is an example. Deal with it!\">\r\n                            <option value=\"\">Maxsulot turini tanlang</option>\r\n                            {productType.map(((value, index) => {\r\n                                return <option value={value.id}>{value.nameUz}</option>\r\n                            }))}\r\n                        </AvField>\r\n                        <AvField type=\"select\" name=\"productId\" label=\"Option\"\r\n                                 helpMessage=\"Idk, this is an example. Deal with it!\">\r\n                            <option value=\"\">Maxsulot Nomini Tanlang</option>\r\n                            {product.map(((value, index) => {\r\n                                return <option value={value.id}>{value.nameUz}</option>\r\n                            }))}\r\n                        </AvField>\r\n                        <AvField name=\"amount\" label=\"Maxsulot miqdori\" required value={currentClient ? currentClient.amount : \"\"}/>\r\n                        <AvField name=\"price\" label=\"Narxi\" required\r\n                                 value={currentClient ? currentClient.price : \"\"}/>\r\n                        <Button color=\"success\">Save</Button>\r\n                    </AvForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal isOpen={deleteModal}>\r\n                <ModalHeader toggle={() => {\r\n                    forDeleteModal()\r\n                }}>\r\n                    O'chirishni tasdiqlaysizmi?\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Button onClick={() => deleteClient(currentClient)}>xa</Button>\r\n                    <Button onClick={() => forDeleteModal()}>Yo'q</Button>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Table\r\n            >\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        #\r\n                    </th>\r\n                    <th>\r\n                        Nomi\r\n                    </th>\r\n                    <th>\r\n                        Maxsulot turi\r\n                    </th>\r\n                    <th>\r\n                        Miqdori\r\n                    </th>\r\n                    <th>\r\n                        Narxi\r\n                    </th>\r\n                    <th>\r\n                        Umumiy summa\r\n                    </th>\r\n\r\n                    <th>\r\n                        Sana\r\n                    </th>\r\n\r\n                    <th>\r\n                        Amallar\r\n                    </th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {inputProduct.map((value, index) => {\r\n                    return <tr style={{cursor: 'pointer'}}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{value.product.nameUz}</td>\r\n                        <td>{value.productType.nameUz}</td>\r\n                        <td>{value.amount}</td>\r\n                        <td>{value.price+' $'}</td>\r\n                        <td>{value.price*value.amount+' $'}</td>\r\n                        <td>{value.inputDate}</td>\r\n                        <td>\r\n                            <button className={\"btn btn-warning\"} onClick={() => editClientRoad(value)}>edit</button>\r\n                            <button className={\"btn btn-danger\"} onClick={() => deleteClientRoad(value)}>delete</button>\r\n                        </td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps=(state)=>({\r\n    inputProduct:state.inputProduct.inputProduct,\r\n    showModal:state.inputProduct.showModal,\r\n    deleteModal:state.inputProduct.deleteModal,\r\n    product:state.product.product,\r\n    productType:state.productType.productType,\r\n\r\n})\r\nconst mapDispatchToProps ={getInputProduct,getProduct,getPrType,modalToggle,forDeleteModal,addInputProduct,editInputProduct,deleteInputProduct}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(InputProduct);"]},"metadata":{},"sourceType":"module"}