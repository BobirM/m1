{"ast":null,"code":"var _jsxFileName = \"C:\\\\proektlar\\\\crud\\\\furniture_frontend\\\\src\\\\pages\\\\Client.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { API_PATH, tokenHeader } from \"../component/Constants\";\nimport { toast } from \"react-toastify\";\nimport { Button, Modal, ModalBody, ModalHeader, Table } from \"reactstrap\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport { connect } from \"react-redux\";\nimport { getClient, modalToggle } from \"../store/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Client = ({\n  client,\n  showModal,\n  getClient,\n  modalToggle\n}) => {\n  _s();\n\n  const [deleteModal, setdeleteModal] = useState(false);\n  const [currentClient, setcurrentClient] = useState(undefined);\n  useEffect(() => {\n    getClient();\n  }, []);\n\n  const saveClient = (event, values) => {\n    if (!currentClient) {\n      axios.post(API_PATH + \"client/add\", values, tokenHeader).then(res => {\n        toast.success(res.data.message);\n        getClient();\n      });\n    } else {\n      axios.put(API_PATH + \"client/edit/\" + currentClient.id, values, tokenHeader).then(res => {\n        getClient();\n      });\n      setcurrentClient(undefined);\n    }\n\n    modalToggle();\n  };\n\n  function deleteClient(value) {\n    axios.delete(API_PATH + \"client/\" + value.id, tokenHeader).then(res => {\n      getClient();\n    });\n    setcurrentClient(undefined);\n    openDeleteModal();\n  }\n\n  function openDeleteModal() {\n    setdeleteModal(!deleteModal);\n  }\n\n  function deleteClientRoad(value) {\n    openDeleteModal();\n    setcurrentClient(value);\n  }\n\n  function editClientRoad(value) {\n    setcurrentClient(value);\n    modalToggle();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: 'btn btn-success ',\n      style: {\n        margin: '20px 0'\n      },\n      onClick: modalToggle,\n      children: \"Qo'shish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModal,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          modalToggle();\n        },\n        children: \"Mijoz Qo'shish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(AvForm, {\n          onValidSubmit: saveClient,\n          children: [/*#__PURE__*/_jsxDEV(AvField, {\n            name: \"name\",\n            label: \"Nomi\",\n            required: true,\n            value: currentClient ? currentClient.name : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            name: \"phone\",\n            label: \"Telefon Raqami\",\n            required: true,\n            value: currentClient ? currentClient.phone : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: deleteModal,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          openDeleteModal();\n        },\n        children: \"O'chirishni tasdiqlaysizmi?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => deleteClient(currentClient),\n          children: \"xa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => openDeleteModal(),\n          children: \"Yo'q\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mijoz Ismi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Telefon Raqami\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Operations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: client.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-warning\",\n                onClick: () => editClientRoad(value),\n                children: \"edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => deleteClientRoad(value),\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Client, \"kYbffNaKFh5zDJLR4BN0TAo/5xI=\");\n\n_c = Client;\n\nconst mapStateToProps = state => ({\n  client: state.client.client,\n  showModal: state.client.showModal\n});\n\nconst mapDispatchToProps = {\n  getClient,\n  modalToggle\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Client);\n\nvar _c;\n\n$RefreshReg$(_c, \"Client\");","map":{"version":3,"sources":["C:/proektlar/crud/furniture_frontend/src/pages/Client.js"],"names":["React","useEffect","useState","axios","API_PATH","tokenHeader","toast","Button","Modal","ModalBody","ModalHeader","Table","AvField","AvForm","connect","getClient","modalToggle","Client","client","showModal","deleteModal","setdeleteModal","currentClient","setcurrentClient","undefined","saveClient","event","values","post","then","res","success","data","message","put","id","deleteClient","value","delete","openDeleteModal","deleteClientRoad","editClientRoad","margin","name","phone","map","index","cursor","mapStateToProps","state","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,wBAApC;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,SAAvB,EAAkCC,WAAlC,EAA+CC,KAA/C,QAA2D,YAA3D;AACA,SAAQC,OAAR,EAAiBC,MAAjB,QAA8B,gCAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,WAAnB,QAAqC,iBAArC;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,MAAD;AAAQC,EAAAA,SAAR;AAAkBJ,EAAAA,SAAlB;AAA4BC,EAAAA;AAA5B,CAAD,KAA8C;AAAA;;AACzD,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACoB,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,CAACsB,SAAD,CAAlD;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMU,UAAU,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AACjC,QAAI,CAACL,aAAL,EAAoB;AAChBnB,MAAAA,KAAK,CAACyB,IAAN,CAAWxB,QAAQ,GAAG,YAAtB,EAAoCuB,MAApC,EAA2CtB,WAA3C,EAAwDwB,IAAxD,CAA6DC,GAAG,IAAI;AAChExB,QAAAA,KAAK,CAACyB,OAAN,CAAcD,GAAG,CAACE,IAAJ,CAASC,OAAvB;AACAlB,QAAAA,SAAS;AAEZ,OAJD;AAKH,KAND,MAMM;AACFZ,MAAAA,KAAK,CAAC+B,GAAN,CAAU9B,QAAQ,GAAC,cAAT,GAAwBkB,aAAa,CAACa,EAAhD,EAAmDR,MAAnD,EAA0DtB,WAA1D,EAAuEwB,IAAvE,CAA4EC,GAAG,IAAE;AAC7Ef,QAAAA,SAAS;AACZ,OAFD;AAGAQ,MAAAA,gBAAgB,CAACC,SAAD,CAAhB;AACH;;AACDR,IAAAA,WAAW;AACd,GAdD;;AAgBA,WAASoB,YAAT,CAAsBC,KAAtB,EAA6B;AACzBlC,IAAAA,KAAK,CAACmC,MAAN,CAAalC,QAAQ,GAAG,SAAX,GAAqBiC,KAAK,CAACF,EAAxC,EAA2C9B,WAA3C,EAAwDwB,IAAxD,CAA6DC,GAAG,IAAI;AAChEf,MAAAA,SAAS;AACZ,KAFD;AAGAQ,IAAAA,gBAAgB,CAACC,SAAD,CAAhB;AACAe,IAAAA,eAAe;AAClB;;AAED,WAASA,eAAT,GAA2B;AACvBlB,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACH;;AAED,WAASoB,gBAAT,CAA0BH,KAA1B,EAAiC;AAC7BE,IAAAA,eAAe;AACfhB,IAAAA,gBAAgB,CAACc,KAAD,CAAhB;AACH;;AACD,WAASI,cAAT,CAAwBJ,KAAxB,EAA+B;AAC3Bd,IAAAA,gBAAgB,CAACc,KAAD,CAAhB;AACArB,IAAAA,WAAW;AACd;;AAKD,sBACI;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAE,kBAAnB;AAAuC,MAAA,KAAK,EAAE;AAAC0B,QAAAA,MAAM,EAAE;AAAT,OAA9C;AAAkE,MAAA,OAAO,EAAE1B,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEG,SAAf;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,MAAM,EAAE,MAAM;AACvBH,UAAAA,WAAW;AACd,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,SAAD;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,aAAa,EAAES,UAAvB;AAAA,kCAYI,QAAC,OAAD;AAAS,YAAA,IAAI,EAAC,MAAd;AAAqB,YAAA,KAAK,EAAC,MAA3B;AAAkC,YAAA,QAAQ,MAA1C;AAA4C,YAAA,KAAK,EAAEH,aAAa,GAAGA,aAAa,CAACqB,IAAjB,GAAwB;AAAxF;AAAA;AAAA;AAAA;AAAA,kBAZJ,eAaI,QAAC,OAAD;AAAS,YAAA,IAAI,EAAC,OAAd;AAAsB,YAAA,KAAK,EAAC,gBAA5B;AAA6C,YAAA,QAAQ,MAArD;AAAsD,YAAA,KAAK,EAAErB,aAAa,GAAGA,aAAa,CAACsB,KAAjB,GAAyB;AAAnG;AAAA;AAAA;AAAA;AAAA,kBAbJ,eAcI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eA4BI,QAAC,KAAD;AAAO,MAAA,MAAM,EAAExB,WAAf;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,MAAM,EAAE,MAAM;AACvBmB,UAAAA,eAAe;AAClB,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,SAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMH,YAAY,CAACd,aAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMiB,eAAe,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BJ,eAuCI,QAAC,KAAD;AAAA,8BAEI;AAAA,+BACA;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAmBI;AAAA,kBACCrB,MAAM,CAAC2B,GAAP,CAAW,CAACR,KAAD,EAAQS,KAAR,KAAkB;AAC1B,8BAAO;AAAI,YAAA,KAAK,EAAE;AAACC,cAAAA,MAAM,EAAE;AAAT,aAAX;AAAA,oCACH;AAAA,wBAAKD,KAAK,GAAG;AAAb;AAAA;AAAA;AAAA;AAAA,oBADG,eAEH;AAAA,wBAAKT,KAAK,CAACM;AAAX;AAAA;AAAA;AAAA;AAAA,oBAFG,eAGH;AAAA,wBAAKN,KAAK,CAACO;AAAX;AAAA;AAAA;AAAA;AAAA,oBAHG,eAIH;AAAA,sCACI;AAAQ,gBAAA,SAAS,EAAE,iBAAnB;AAAsC,gBAAA,OAAO,EAAE,MAAIH,cAAc,CAACJ,KAAD,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAQ,gBAAA,SAAS,EAAE,gBAAnB;AAAqC,gBAAA,OAAO,EAAE,MAAMG,gBAAgB,CAACH,KAAD,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJG;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AASH,SAVA;AADD;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2EH,CA5HD;;GAAMpB,M;;KAAAA,M;;AA6HN,MAAM+B,eAAe,GAAEC,KAAD,KAAU;AAC5B/B,EAAAA,MAAM,EAAC+B,KAAK,CAAC/B,MAAN,CAAaA,MADQ;AAE5BC,EAAAA,SAAS,EAAC8B,KAAK,CAAC/B,MAAN,CAAaC;AAFK,CAAV,CAAtB;;AAIA,MAAM+B,kBAAkB,GAAE;AAACnC,EAAAA,SAAD;AAAWC,EAAAA;AAAX,CAA1B;AACA,eAAgBF,OAAO,CAACkC,eAAD,EAAiBE,kBAAjB,CAAP,CAA6CjC,MAA7C,CAAhB","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {API_PATH, tokenHeader} from \"../component/Constants\";\r\nimport {toast} from \"react-toastify\";\r\nimport {Button, Modal, ModalBody, ModalHeader, Table} from \"reactstrap\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {connect} from \"react-redux\";\r\nimport {getClient, modalToggle} from \"../store/client\";\r\n\r\nconst Client = ({client,showModal,getClient,modalToggle}) => {\r\n    const [deleteModal, setdeleteModal] = useState(false)\r\n    const [currentClient, setcurrentClient] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        getClient()\r\n    }, [])\r\n\r\n\r\n    const saveClient = (event,values) => {\r\n        if (!currentClient) {\r\n            axios.post(API_PATH + \"client/add\", values,tokenHeader).then(res => {\r\n                toast.success(res.data.message)\r\n                getClient()\r\n\r\n            })\r\n        }else {\r\n            axios.put(API_PATH+\"client/edit/\"+currentClient.id,values,tokenHeader).then(res=>{\r\n                getClient()\r\n            })\r\n            setcurrentClient(undefined)\r\n        }\r\n        modalToggle()\r\n    }\r\n\r\n    function deleteClient(value) {\r\n        axios.delete(API_PATH + \"client/\"+value.id,tokenHeader).then(res => {\r\n            getClient()\r\n        })\r\n        setcurrentClient(undefined)\r\n        openDeleteModal()\r\n    }\r\n\r\n    function openDeleteModal() {\r\n        setdeleteModal(!deleteModal)\r\n    }\r\n\r\n    function deleteClientRoad(value) {\r\n        openDeleteModal()\r\n        setcurrentClient(value)\r\n    }\r\n    function editClientRoad(value) {\r\n        setcurrentClient(value)\r\n        modalToggle()\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button className={'btn btn-success '} style={{margin: '20px 0'}} onClick={modalToggle}>Qo'shish</button>\r\n\r\n            <Modal isOpen={showModal}>\r\n                <ModalHeader toggle={() => {\r\n                    modalToggle()\r\n                }}>\r\n                    Mijoz Qo'shish\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <AvForm onValidSubmit={saveClient}>\r\n                        {/* With AvField */}\r\n                        {/*<AvField type=\"checkbox\" name=\"active\" label=\"Active\" value=\"false\"/>*/}\r\n                        {/* With AvGroup AvInput and AvFeedback to build your own */}\r\n                        {/*<AvField type=\"select\" name=\"select\" label=\"Option\"*/}\r\n                        {/*         helpMessage=\"Idk, this is an example. Deal with it!\">*/}\r\n                        {/*    <option>1</option>*/}\r\n                        {/*    <option>2</option>*/}\r\n                        {/*    <option>3</option>*/}\r\n                        {/*    <option>4</option>*/}\r\n                        {/*    <option>5</option>*/}\r\n                        {/*</AvField>*/}\r\n                        <AvField name=\"name\" label=\"Nomi\" required  value={currentClient ? currentClient.name : \"\"}/>\r\n                        <AvField name=\"phone\" label=\"Telefon Raqami\" required value={currentClient ? currentClient.phone : \"\"}/>\r\n                        <Button color=\"success\">Save</Button>\r\n                    </AvForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Modal isOpen={deleteModal}>\r\n                <ModalHeader toggle={() => {\r\n                    openDeleteModal()\r\n                }}>\r\n                    O'chirishni tasdiqlaysizmi?\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Button onClick={() => deleteClient(currentClient)} >xa</Button>\r\n                    <Button onClick={() => openDeleteModal()}>Yo'q</Button>\r\n                </ModalBody>\r\n            </Modal>\r\n            <Table\r\n            >\r\n                <thead>\r\n                <tr>\r\n                    <th>\r\n                        #\r\n                    </th>\r\n                    <th>\r\n                        Mijoz Ismi\r\n                    </th>\r\n                    <th>\r\n                        Telefon Raqami\r\n                    </th>\r\n                    <th>\r\n                        Operations\r\n                    </th>\r\n\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {client.map((value, index) => {\r\n                    return <tr style={{cursor: 'pointer'}}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{value.name}</td>\r\n                        <td>{value.phone}</td>\r\n                        <td>\r\n                            <button className={\"btn btn-warning\"} onClick={()=>editClientRoad(value)}>edit</button>\r\n                            <button className={\"btn btn-danger\"} onClick={() => deleteClientRoad(value)}>delete</button>\r\n                        </td>\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps=(state)=>({\r\n    client:state.client.client,\r\n    showModal:state.client.showModal\r\n})\r\nconst mapDispatchToProps ={getClient,modalToggle}\r\nexport default  connect(mapStateToProps,mapDispatchToProps) (Client);"]},"metadata":{},"sourceType":"module"}